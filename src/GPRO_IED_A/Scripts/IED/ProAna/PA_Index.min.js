if (void 0 === GPRO || !GPRO) var GPRO = {}; GPRO.namespace = function () { var e, a, t, n = arguments, o = null; for (e = 0; e < n.length; e += 1) for (t = ("" + n[e]).split("."), o = GPRO, a = "GPRO" == t[0] ? 1 : 0; a < t.length; a += 1) o[t[a]] = o[t[a]] || {}, o = o[t[a]]; return o }, GPRO.namespace("ProAna"), GPRO.ProAna = function () { var e = { UrlAction: { GetListnoName: "/ProAna/Gets", SaveProAna: "/ProAna/Save", DeleteProAna: "/ProAna/Delete", GetCommoAnaItem: "/ProAna/GetByParentId", SavePhase: "/ProAna/SavePhase", DeletePhase: "/ProAna/DeletePhase", CopyPhase: "/ProAna/CopyPhase", GetLastIndex: "/ProAna/GetPhaseLastIndex", GetPhaseGroup: "/PhaseGroup/GetPhaseGroups", GetListPhase: "/ProAna/GetPhases", GetPhaseById: "/ProAna/GetPhaseById", GetPhaseVersionManipulationByManipulationVersionId: "/ProAna/GetPhaseVersionManipulationByManipulationVersionId", Copy_CommoAnaPhaseGroup: "/ProAna/Copy_CommoAnaPhaseGroup", ActivePhaseVersion: "/ProAna/ActivePhaseVersion", SavePhaseVersion: "/ProAna/SavePhaseVersion", DeletePhaseVersion: "/ProAna/DeletePhaseVersion", GetPhaseVersionById: "/ProAna/GetPhaseVersionById", GetPhaseVersionByVerId: "/ProAna/GetPhaseVersionByVerId", GetListTimePrepare: "/TimePrepare/GetLists", GetListAccessories: "/Equipment/GetListAccessories", GetTimeTypePrepare: "/TimePrepare/GetTimeTypePreparesByWorkShopId", GetAllManipulation: "/MType/GetAllManipulation", GetListManipulation: "/MType/GetList", GetManipulationTypes: "/MType/GetManipulationTypes", GetManipulationFileById: "/MType/GetManipulationFileById", GetListEquipment: "/Equipment/Gets", GetManipulationEquipmentInfoByCode: "/MType/GetManipulationEquipmentInfoByCode", SaveManipulationVersion: "/ProAna/SaveManipulationVersion", DeletePhaseManiVersion: "/ProAna/DeletePhaseManiVersion", ApprovalComoAnaPhaseManiVer: "/ProAna/ApprovalComoAnaPhaseManiVer", Active_PhaseManiVersion: "/ProAna/ActiveComoAnaPhaseManiVer", GetManipulation: "/MType/GetListSmall", GetEquipments: "/Equipment/GetEquipmentByEquipmentTypeId", Copy_PhaseManiVersion: "/ProAna/Copy_PhaseManiVersion", export_PhaseManiVersion: "/ProAna/export_PhaseManiVersion", ActiveComoAnaPhaseManiVer: "/ProAna/Active_PhaseManiVersion", GetManiDetails: "/ProAna/GetComoAnaPhaseManiVer", GetTech: "/ProAna/GetTech", SaveTech: "/ProAna/SaveTech", ExportToExcel: "/ProAna/ExportToExcel_1" }, Element: { jtable_Timeprepare_Chooise: "jtable-timeprepare", jtable_timeprepare_arr: "jtable-timeprepare-arr", timeprepare_Popup: "timeprepare-Popup", timeprepare_Popup_Search: "timePrepare_PopupSearch", jtablePhase: "jtable-phase", CreatePhasePopup: "Create-Phase-Popup", JtableManipulationArr: "jtable_ManipulationArr", PopupSearchEquipment: "POPUP_SEARCHEQUIP", JtableEquipment: "jtable-chooseequipment", PopupChooseEquipment: "ChooseEquipment_Popup", JtableComodity: "jtableComodity", ListComodityPopup: "List-Comodity-Popup", CreateCommodityPopup: "capopup_Commodity", SearchComodityPopup: "Search-Comodity-Popup", CreateWorkShopPopup: "Create-Workshop-popup", JtableWorkShop: "jtable-WorkShop", ListWorkShopPopup: "List-WorkShop-Popup", SearchWorkShopPopup: "Search-WorkShop-Popup", CreatePhaseGroupPopup: "Create-PhaseGroup-Popup", ListPhaseGroupPopup: "List-PhaseGroup-Popup", SearchPhaseGroupPopup: "Search-PhaseGroup-Popup", JtablePhaseGroup: "jtable-PhaseGroup", CreatePhaseVersionPopup: "Create-PhaseVersion-Popup", JtablePhaseVerDetailArr: "jtable-phaseVersionSelected", jtablePhase_Chooise: "jtable-PhaseVersionChooise", PopupChooisePhase: "Popup_ChooisePhase", jtablePhaseVersion: "techprocess", PopupPhaseSearch: "Phase_PopupSearch", JtablePhase: "jtable-mani-select", CreateManipulationVersion: "Create-ManipulationVersion-Popup", jtableManipulation_choose: "jtableManipulation", popupManipulationSearch: "manipulation_PopupSearch", jtable_accessoriess_arr: "jtable-accessoriess-arr", jtable_accessories_Chooise: "jtable-accessories", accessories_Popup: "accessories-Popup", accessories_Popup_Search: "accessories_PopupSearch", JtableTech_Cycle: "Jtable-TechCycle" }, Data: { TreeExpand: [], year: [], month: [], customer: [], is: !1, index: 0, Images: ["Company.png", "palet02.png", "factory.png", "recipegroup.png", "", "components.png", "group_config.png", ""], height: 0, position: 0, isChange: !1, TreeSelectItem: {}, ProAnaArray: [], ModelProAna: {}, TimePrepareArray: [], Commo_Ana_PhaseId: 0, PhaseManiVerDetailArray: [], isInsertPhase: !0, ParentID: 0, Node: "", ManipulationVersionModel: {}, PhaseAutoCode: "", phaseLastIndex: 1, AccessoriesArray: [], TMU: 0, Video: "", yearStr: "0", ObjectType: 0, ObjectId: 0, PhaseModel: {}, isUserMachine: !1, ModelPhaseVersion: {}, PhaseVersiondetailArray: [], isCall: !1, WorkShopId: 0, PhaseNode: "", PhaseVerManiDetailModel: {}, ModelCommo_Anna_Phase: {}, ManipulationList: [], ModelManipulationType: {}, ModelManipulation: {}, NodeUseToFind: "", ManipulationTypeId: 0, Model: {}, ManipulationTypeArray: [], IntGetTMUType: 0, GetTMUType: { StandardTMU: 1, UserTMU: 2, All: 3 }, PhaseManipulationVersionDetailRowId: 0, EquipTypeDefaultId: { SE: 1, C: 2 }, IsClear: !1, Copy_CommoAnaPhaseGroupId: 0, isApproveManiVersion: !1, isSave_App_Ac_ManiVersion: !1, SelectRow: 0, labelName: "", right_position: 0, TechCycle_Arr: [], TimeProductPerCommodity: 0, TechProcessVersion: {}, productId: 0, AfterSave: !1 } }; this.GetGlobal = function () { return e }, this.TitleChange = function () { var a = $("#tile-parent").val(), t = $("#" + e.Element.JtableTech_Cycle).find("tbody tr"); if (t.length > 0) { var n = 0; t.each(function (t, o) { $(this).find("[percent]").val(a); var r = parseFloat(e.Data.TechCycle_Arr[t].StandardTMU), i = Math.round(100 * r / parseFloat(a) * 1e3) / 1e3; $($($(this).find("td"))[6]).html(ParseStringToCurrency(i)), e.Data.TechCycle_Arr[t].TimeByPercent = i, n += i }), $("#time-product").html(Math.round(1e3 * n) / 1e3), e.Data.TimeProductPerCommodity = n, g(0) } }, this.Init = function () { a(), GetProductSelect("caproduct"), GetWorkshopSelect("wk-name"), GetPhaseGroupSelect("phaseGroup-name"), r(), $.ajax({ url: e.UrlAction.GetAllManipulation, type: "POST", data: "", contentType: "application/json charset=utf-8", success: function (a) { GlobalCommon.CallbackProcess(a, function () { if ("OK" == a.Result) { var t = ""; null != a.Data && a.Data.length > 0 && $.each(a.Data, function (a, n) { e.Data.ManipulationList.push(n), t += '<option value="' + n.Code + '" /> ', t += '<option value="' + n.Name + '" /> ' }), $("#manipulations").append(t) } else GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, e.Element.PopupProductType, !0, !0, function () { var e = GlobalCommon.GetErrorMessage(a); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra.") }) } }), GetWorkersLevelSelect("workersLevel"), GetApplyPressureSelect("ApplyPressure"), $("#config").attr("tmu"), e.Data.TMU = parseFloat($("#config").attr("tmu")), "" != $("#config").attr("gettmutype") && (e.Data.IntGetTMUType = parseInt($("#config").attr("gettmutype"))), f(), $("#" + e.Element.jtable_timeprepare_arr).jtable({ title: "Danh Sách Thời Gian Chuẩn Bị", paging: !0, pageSize: 5, pageSizeChange: !0, sorting: !0, selectShow: !0, actions: { listAction: e.Data.TimePrepareArray, createAction: e.Element.timeprepare_Popup }, messages: { addNewRecord: "Thêm mới", selectShow: "Ẩn hiện cột" }, fields: { Id: { key: !0, create: !1, edit: !1, list: !1 }, Name: { visibility: "fixed", title: "Tên ", width: "20%", display: function (e) { var a = '<span class="blue bold">' + e.record.Name + "</span>"; return a } }, Code: { title: "Mã", width: "5%" }, TimeTypePrepareName: { title: "Loại Thời Gian Chuẩn Bị", width: "20%" }, TMUNumber: { title: "Chỉ số TMU", width: "5%", display: function (e) { return txt = '<span class="blue bold">' + ParseStringToCurrency(e.record.TMUNumber) + "</span>", txt } }, Description: { title: "Mô Tả", width: "20%", sorting: !1 }, Delete: { title: "", width: "3%", sorting: !1, display: function (a) { var t = $('<button title="Xóa" class="jtable-command-button jtable-delete-command-button"><span>Xóa</span></button>'); return t.click(function () { GlobalCommon.ShowConfirmDialog("Bạn có chắc chắn muốn xóa?", function () { var t; t = a.record.TimePrepareId, flag = !1, void 0 !== e.Data.TimePrepareArray && null != e.Data.TimePrepareArray && e.Data.TimePrepareArray.length > 0 && $.each(e.Data.TimePrepareArray, function (a, n) { if (n.TimePrepareId == t) return e.Data.TimePrepareArray.splice(a, 1), s(), flag = !0, e.Data.PhaseModel.IsTimePrepareChange = !0, !1 }), flag && y() }, function () { }, "Đồng ý", "Hủy bỏ", "Thông báo") }), t } } } }), $("#" + e.Element.jtable_Timeprepare_Chooise).jtable({ title: "Danh Sách Thời Gian Chuẩn Bị", paging: !0, pageSize: 5, pageSizeChangeTimePrepare: !0, sorting: !0, selectShow: !0, selecting: !0, multiselect: !0, selectingCheckboxes: !0, actions: { listAction: e.UrlAction.GetListTimePrepare, searchAction: e.Element.timeprepare_Popup_Search }, messages: { searchRecord: "Tìm kiếm", selectShow: "Ẩn hiện cột" }, fields: { Id: { key: !0, create: !1, edit: !1, list: !1 }, Name: { visibility: "fixed", title: "Tên ", width: "20%", display: function (e) { var a = '<span class="blue bold">' + e.record.Name + "</span>"; return a } }, Code: { title: "Mã", width: "5%" }, TimeTypePrepareName: { title: "Loại Thời Gian Chuẩn Bị", width: "20%" }, TMUNumber: { title: "Chỉ số TMU", width: "20%", display: function (e) { return txt = '<span class="red bold">' + ParseStringToCurrency(e.record.TMUNumber) + "</span>", txt } }, Description: { title: "Mô Tả", width: "20%", sorting: !1 } } }), $("#" + e.Element.jtablePhase).jtable({ title: "Danh sách Công Đoạn", paging: !0, pageSize: 50, pageSizeChange: !0, sorting: !0, selectShow: !0, rowInserted: function (a, t) { if (t.record.Id == e.Data.Commo_Ana_PhaseId) { var n = $("#" + e.Element.jtablePhase).jtable("getRowByKey", t.record.Id); $(n.children().find(".aaa")).click() } }, actions: { listAction: e.UrlAction.GetListPhase, createAction: e.Element.CreatePhasePopup }, messages: { addNewRecord: "Thêm mới Công Đoạn", selectShow: "Ẩn hiện cột" }, datas: { jtableId: e.Element.jtablePhase }, fields: { Id: { key: !0, create: !1, edit: !1, list: !1 }, Index: { title: "Mã Công Đoạn", width: "7%", display: function (e) { var a = '<span class="red bold">' + e.record.Code + "</span>"; return a } }, Name: { visibility: "fixed", title: "Tên Công Đoạn", width: "10%" }, WorkerLevelId: { title: "Bậc thợ", width: "5%", display: function (e) { var a = '<span class="red bold">' + e.record.WorkerLevelName + "</span>"; return a } }, TotalTMU: { title: "Thời gian thực hiện(s)", width: "5%", display: function (e) { return txt = '<span class="red bold">' + Math.round(1e3 * e.record.TotalTMU) / 1e3 + "</span>", txt } }, Description: { title: "Mô Tả", width: "20%", sorting: !1 }, action: { title: "", width: "1%", sorting: !1, display: function (a) { var t = $('<i   title="Copy công đoạn" class="fa fa-files-o clickable blue"  ></i>'); return t.click(function () { var t; t = a.record.Id, $.ajax({ url: e.UrlAction.CopyPhase, type: "POST", data: JSON.stringify({ Id: t }), contentType: "application/json charset=utf-8", beforeSend: function () { $("#loading").show() }, success: function (a) { $("#loading").hide(), GlobalCommon.CallbackProcess(a, function () { "OK" == a.Result ? (c(), u()) : GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, e.Element.PopupCommodityAnalysis, !0, !0, function () { var e = GlobalCommon.GetErrorMessage(a); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra.") }) } }) }), t } }, Excel: { title: "", width: "2%", sorting: !1, display: function (e) { if (e.record.actions.length > 0) { var a = $('<i title="Xuất Danh Sách Thao Tác của Công đoạn" class="fa fa-file-excel-o"></i>'); return a.click(function () { window.location.href = "/ProAna/export_PhaseManiVersion?Id=" + e.record.Id }), a } } }, edit: { title: "", width: "1%", sorting: !1, display: function (a) { var t = $('<i data-toggle="modal" data-target="#' + e.Element.CreatePhasePopup + '" title="Chỉnh sửa thông tin" class="fa fa-pencil-square-o clickable blue"  ></i>'); return t.click(function () { a.record.TotalTMU = Math.round(1e3 * a.record.TotalTMU) / 1e3, $("#workersLevel").val(a.record.WorkerLevelId), $("#TotalTMU").html(a.record.TotalTMU), $("#phase-Des").val(a.record.Description), $("#phaseID").val(a.record.Id), $("#phase-name").val(a.record.Name), $("#phase-code").html(a.record.Code), a.record.timePrepares.length > 0 && ($.each(a.record.timePrepares, function (a, t) { e.Data.TimePrepareArray.push(t) }), s()), $("#equipmentId").val(a.record.EquipmentId), $("#equipmentName").val(a.record.EquipName), $("#equiptypedefaultId").val(a.record.EquipTypeDefaultId), $("#E_info").val(a.record.EquipDes), $("#ApplyPressure").val(a.record.ApplyPressuresId), $("#chooseApplyPressure").hide(), 0 != a.record.ApplyPressuresId && $("#chooseApplyPressure").show(), e.Data.PhaseManiVerDetailArray.length = 0, a.record.actions.length > 0 && ($.each(a.record.actions, function (e, a) { a.OrderIndex = e + 1 }), $.each(a.record.actions, function (a, t) { var n = { Id: t.Id, CA_PhaseId: t.CA_PhaseId, OrderIndex: t.OrderIndex, ManipulationId: t.ManipulationId, ManipulationCode: t.ManipulationCode.trim(), EquipmentId: t.EquipmentId, TMUEquipment: t.TMUEquipment, TMUManipulation: t.TMUManipulation, Loop: t.Loop, TotalTMU: t.TotalTMU, ManipulationName: null == t.ManipulationName ? "" : t.ManipulationName.trim() }; e.Data.PhaseManiVerDetailArray.push(n) })), m(), h(), $("[percentequipment]").val(a.record.PercentWasteEquipment), $("[percentmanipulation]").val(a.record.PercentWasteManipulation), $("[percentdb]").val(a.record.PercentWasteManipulation), $("[percentnpl]").val(a.record.PercentWasteMaterial), D(), e.Data.isInsertPhase = !1, e.Data.Video = a.record.Video; var t = document.getElementsByTagName("video")[0], n = t.getElementsByTagName("source"); n[0].src = a.record.Video.split("|")[0], t.load() }), t } }, Delete: { title: "", width: "3%", sorting: !1, display: function (a) { var t = $('<button title="Xóa" class="jtable-command-button jtable-delete-command-button"><span>Xóa</span></button>'); return t.click(function () { GlobalCommon.ShowConfirmDialog("Bạn có chắc chắn muốn xóa?", function () { var t; t = a.record.Id, $.ajax({ url: e.UrlAction.DeletePhase, type: "POST", data: JSON.stringify({ Id: t }), contentType: "application/json charset=utf-8", beforeSend: function () { $("#loading").show() }, success: function (a) { $("#loading").hide(), GlobalCommon.CallbackProcess(a, function () { "OK" == a.Result ? (c(), u()) : GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, e.Element.PopupCommodityAnalysis, !0, !0, function () { var e = GlobalCommon.GetErrorMessage(a); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra.") }) } }) }, function () { }, "Đồng ý", "Hủy bỏ", "Thông báo") }), t } } } }), $("#" + e.Element.JtableEquipment).jtable({ title: "Danh sách Thiết Bị", paging: !0, pageSize: 10, pageSizeChange: !0, sorting: !0, selectShow: !0, actions: { listAction: e.UrlAction.GetListEquipment, searchAction: e.Element.PopupSearchEquipment }, messages: { addNewRecord: "Thêm mới", searchRecord: "Tìm kiếm", selectShow: "Ẩn hiện cột" }, fields: { Id: { key: !0, create: !1, edit: !1, list: !1 }, Code: { title: "Mã Thiết Bị", width: "10%" }, Name: { visibility: "fixed", title: "Tên Thiết Bị", width: "20%", display: function (a) { var t = $('<a class="clickable"  data-target="#popup_Equipment" title="Chọn thiết bị cho phiên bản công đoạn.">' + a.record.Name + "</a>"); return t.click(function () { if ("" == $("#equipmentId").val().trim() || "0" == $("#equipmentId").val().trim() || 0 == e.Data.PhaseManiVerDetailArray.length) $("#equipmentId").val(a.record.Id), $("#equipmentName").val(a.record.Name), $("#equiptypedefaultId").val(a.record.EquipTypeDefaultId), $("#E_info").val(a.record.Description), $("[percentequipment]").val(a.record.Expend), a.record.EquipTypeDefaultId == e.Data.EquipTypeDefaultId.C ? $("#chooseApplyPressure").show() : $("#chooseApplyPressure").hide(), $("#" + e.Element.PopupChooseEquipment).modal("hide"), $("#" + e.Element.CreatePhasePopup).show(); else if (e.Data.PhaseManiVerDetailArray.length > 0) { var t = []; $.each(e.Data.PhaseManiVerDetailArray, function (e, a) { a.ManipulationCode = a.ManipulationCode.trim().toUpperCase(), "SE" != a.ManipulationCode.substring(0, 2) && "C" != a.ManipulationCode.substring(0, 1) || t.push(a.OrderIndex) }), t.length > 0 ? GlobalCommon.ShowConfirmDialog("Khi Bạn thay đổi Thiết Bị, chỉ số TMU các Mã May và Mã Cắt \nđã phân tích trước đó sẽ không còn đúng nên sẽ bị xóa \nvà Bạn sẽ Tạo lại các Mã đó.\nBạn có muốn thay đổi Thiết Bị không ?", function () { $("#equipmentId").val(a.record.Id), $("#equipmentName").val(a.record.Name), $("#equiptypedefaultId").val(a.record.EquipTypeDefaultId), $("#E_info").val(a.record.Description), $("[percentequipment]").val(a.record.Expend), a.record.EquipTypeDefaultId == e.Data.EquipTypeDefaultId.C ? $("#chooseApplyPressure").show() : $("#chooseApplyPressure").hide(), $.each(t, function (a, t) { for (var n = t - 1; n < e.Data.PhaseManiVerDetailArray.length; n++) e.Data.PhaseManiVerDetailArray[n].OrderIndex = e.Data.PhaseManiVerDetailArray[n].OrderIndex - 1 }), function a() { $.each(e.Data.PhaseManiVerDetailArray, function (t, n) { if (t < e.Data.PhaseManiVerDetailArray.length && ("SE" == n.ManipulationCode.substring(0, 2) || "C" == n.ManipulationCode.substring(0, 1))) return e.Data.PhaseManiVerDetailArray.splice(t, 1), a(), !1 }) }(), h(), $("#" + e.Element.PopupChooseEquipment).modal("hide"), $("#" + e.Element.CreatePhasePopup).show() }, function () { $("#" + e.Element.PopupChooseEquipment).modal("hide"), $("#" + e.Element.CreatePhasePopup).show() }, "Đồng ý", "Hủy bỏ", "Thông báo") : ($("#equipmentId").val(a.record.Id), $("#equipmentName").val(a.record.Name), $("#equiptypedefaultId").val(a.record.EquipTypeDefaultId), $("#E_info").val(a.record.Description), $("[percentequipment]").val(a.record.Expend), a.record.EquipTypeDefaultId == e.Data.EquipTypeDefaultId.C ? $("#chooseApplyPressure").show() : $("#chooseApplyPressure").hide(), $("#" + e.Element.PopupChooseEquipment).modal("hide"), $("#" + e.Element.CreatePhasePopup).show()) } }), t } }, EquipmentTypeName: { title: "Loại Thiết Bị", width: "20%" }, Description: { title: "Mô Tả", width: "20%" } } }), $("#" + e.Element.JtableManipulationArr).jtable({ title: "Danh Sách Thao Tác", pageSize: 100, pageSizeChange: !0, selectShow: !0, sorting: !1, actions: { listAction: e.Data.PhaseManiVerDetailArray }, messages: { selectShow: "Ẩn hiện cột" }, fields: { Id: { key: !0, create: !1, edit: !1, list: !1 }, OrderIndex: { title: "STT", width: "5%", display: function (a) { var t = $('<input class="form-control center" stt type="text" value =\'' + a.record.OrderIndex + "' />"); return t.change(function () { if (a.record.OrderIndex == e.Data.PhaseManiVerDetailArray.length) GlobalCommon.ShowMessageDialog("Đây là Thao Tác rỗng không thể thay đỗi Chèn vào vị trí khác được.", function () { }, "Thao Tác Rỗng"), t.val(a.record.OrderIndex); else { var n = parseInt(t.val()), o = a.record.OrderIndex; if (n <= 0 || n >= e.Data.PhaseManiVerDetailArray.length) GlobalCommon.ShowMessageDialog("Số Thứ Tự Thao Tác phải lớn hơn 0 và nhỏ hơn " + e.Data.PhaseManiVerDetailArray.length + ".", function () { }, "Số Thứ Tự Thao Tác không hợp lệ"), t.val(a.record.OrderIndex); else { var r = e.Data.PhaseManiVerDetailArray[o - 1]; if (r.OrderIndex = n, e.Data.PhaseManiVerDetailArray.splice(o - 1, 1), e.Data.PhaseManiVerDetailArray.splice(n - 1, 0, r), n < o) for (var i = n; i < e.Data.PhaseManiVerDetailArray.length; i++) e.Data.PhaseManiVerDetailArray[i].OrderIndex = i + 1; else for (var i = 0; i < e.Data.PhaseManiVerDetailArray.length; i++) i + 1 != n && (e.Data.PhaseManiVerDetailArray[i].OrderIndex = i + 1); e.Data.PhaseManiVerDetailArray.sort(function (e, a) { var t = e.OrderIndex, n = a.OrderIndex; return t < n ? -1 : t > n ? 1 : 0 }), h() } } }), t.click(function () { t.select() }), t } }, ManipulationCode: { title: "Mã", width: "15%", display: function (a) { var t = $('<input class="form-control" code_' + a.record.OrderIndex + ' list="manipulations" type="text" value="' + a.record.ManipulationCode + '" />'); return t.change(function () { var n = t.val().trim().toUpperCase(); if (e.Data.ManipulationList.length > 0 && "" != n) { n = n.toUpperCase(); var o = !0, r = !1; n.length >= 4 && ("C" != n.substring(0, 1) && "SE" != n.substring(0, 2) || (P(n, function (t) { r = !1, void 0 !== t && null != t && (e.Data.PhaseManiVerDetailArray[a.record.OrderIndex - 1].ManipulationName = t.Name, e.Data.PhaseManiVerDetailArray[a.record.OrderIndex - 1].ManipulationCode = t.Code, e.Data.PhaseManiVerDetailArray[a.record.OrderIndex - 1].TMUEquipment = t.StandardTMU, e.Data.PhaseManiVerDetailArray[a.record.OrderIndex - 1].TMUManipulation = 0, e.Data.PhaseManiVerDetailArray[a.record.OrderIndex - 1].TotalTMU = Math.round(e.Data.PhaseManiVerDetailArray[a.record.OrderIndex - 1].Loop * t.StandardTMU * 1e3) / 1e3, e.Data.PhaseManiVerDetailArray.length == a.record.OrderIndex ? (m(), $("[code_" + e.Data.PhaseManiVerDetailArray.length + "]").focus(), $("#Create-ManipulationVersion-Popup .modal-body").scrollTop($("#Create-ManipulationVersion-Popup .modal-body").height())) : $("#Create-ManipulationVersion-Popup .modal-body").scrollTop($("#Create-ManipulationVersion-Popup .modal-body").scrollTop()), h(), D(), $("[code_" + e.Data.PhaseManiVerDetailArray.length + "]").focus(), $("#Create-ManipulationVersion-Popup .modal-body").scrollTop($("#Create-ManipulationVersion-Popup .modal-body").height())) }), o = !1)), o && ($.each(e.Data.ManipulationList, function (t, o) { if (o.Code.trim() == n || "" != o.Name && o.Name.trim().toUpperCase() == n) return $.each(e.Data.PhaseManiVerDetailArray, function (e, t) { if (t.OrderIndex == a.record.OrderIndex) return t.ManipulationId = o.Id, t.ManipulationCode = o.Code, t.ManipulationName = o.Name, t.TMUManipulation = o.isUseMachine ? 0 : o.StandardTMU, t.TMUEquipment = o.isUseMachine ? o.StandardTMU : 0, t.TotalTMU = Math.round(t.Loop * o.StandardTMU * 1e3) / 1e3, r = !0, !1 }), !1 }), r || GlobalCommon.ShowMessageDialog("Không tìm thấy thông tin của Thao Tác này trong Thư Viện.\nVui lòng kiểm tra lại Thư Viện thao Tác.", function () { }, "Không Tìm Thấy Thao Tác")), r && (e.Data.PhaseManiVerDetailArray.length == a.record.OrderIndex && m(), h(), D(), e.Data.PhaseManiVerDetailArray.length - 1 == a.record.OrderIndex ? ($("[code_" + e.Data.PhaseManiVerDetailArray.length + "]").focus(), $("#Create-ManipulationVersion-Popup .modal-body").scrollTop($("#Create-ManipulationVersion-Popup .modal-body").height())) : $("#Create-ManipulationVersion-Popup .modal-body").scrollTop($("#Create-ManipulationVersion-Popup .modal-body").scrollTop())) } }), t.keypress(function (e) { var a = e.which ? e.which : event.keyCode; 13 == a && t.change() }), t.click(function () { t.select() }), t } }, Description: { title: "Mô Tả", width: "35%", display: function (a) { var t = $('<input class="form-control" des type="text" value="' + a.record.ManipulationName + '" />'); return t.change(function () { e.Data.PhaseManiVerDetailArray[a.record.OrderIndex - 1].ManipulationName = t.val() }), t.keypress(function (e) { var a = e.which ? e.which : event.keyCode; 13 == a && t.change() }), t.click(function () { t.select() }), t } }, Loop: { title: "Tần Suất", width: "5%", display: function (a) { var t = $('<input class="form-control center" loop type="text" value="' + a.record.Loop + '"  onkeypress="return isNumberKey(event)"/>'); return t.change(function () { var n = parseFloat(t.val()); e.Data.PhaseManiVerDetailArray[a.record.OrderIndex - 1].Loop = t.val(), e.Data.PhaseManiVerDetailArray[a.record.OrderIndex - 1].TotalTMU = Math.round(1e3 * (e.Data.PhaseManiVerDetailArray[a.record.OrderIndex - 1].TMUEquipment * n + e.Data.PhaseManiVerDetailArray[a.record.OrderIndex - 1].TMUManipulation * n)) / 1e3, h(), D() }), t.click(function () { t.select() }), t } }, TMUEquipment: { title: "TMU Thiết Bị (chuẩn)", width: "5%", display: function (e) { var a = '<span class="blue bold">' + e.record.TMUEquipment + "</span>"; return a } }, TMUManipulation: { title: "TMU Thao Tác (chuẩn)", width: "5%", display: function (e) { var a = '<span class="blue bold">' + e.record.TMUManipulation + "</span>"; return a } }, TotalTMU: { title: "Tổng TMU", width: "5%", display: function (e) { var a = '<span class="red bold">' + e.record.TotalTMU + "</span>"; return a } }, Delete: { title: "", width: "3%", sorting: !1, display: function (a) { var t = $('<button title="Xóa" class="jtable-command-button jtable-delete-command-button"><span>Xóa</span></button>'); return t.click(function () { GlobalCommon.ShowConfirmDialog("Bạn có chắc chắn muốn xóa?", function () { var t = a.record.OrderIndex - 1; e.Data.PhaseManiVerDetailArray.splice(t, 1); for (var n = t; n < e.Data.PhaseManiVerDetailArray.length; n++) e.Data.PhaseManiVerDetailArray[n].OrderIndex = n + 1; h(), D() }, function () { }, "Đồng ý", "Hủy bỏ", "Thông báo") }), t } } } }), f(), $("#jtable_tkc").hide(), e.Data.PhaseManiVerDetailArray.length = 0, m(), h(), D() }, this.ResetTime_Percent = function (a) { !function (a) { i = parseInt(a), value = $("#percent" + i).val(); var t = $("#" + e.Element.JtableTech_Cycle).find("tbody tr"); time = parseFloat(e.Data.TechCycle_Arr[i - 1].StandardTMU), timeByPercent = Math.round(100 * time / parseFloat(value) * 1e3) / 1e3, $($($(t[i - 1]).find("td"))[6]).html(ParseStringToCurrency(timeByPercent)), oldValue = parseFloat($("#time-product").html()), oldValue -= e.Data.TechCycle_Arr[i - 1].TimeByPercent, new_Value = Math.round(1e3 * (oldValue + timeByPercent)) / 1e3, $("#time-product").html(Math.round(1e3 * new_Value) / 1e3), e.Data.TechCycle_Arr[i - 1].TimeByPercent = timeByPercent, e.Data.TimeProductPerCommodity = new_Value, g(a) }(a) }, this.reloadListProAna = function () { ReloadListProAna() }; var a = function () { $("[re_caproduct]").click(function () { GetProductSelect("caproduct") }), $("#" + e.Element.CreateCommodityPopup).on("shown.bs.modal", function () { $("div.divParent").attr("currentPoppup", e.Element.CreateCommodityPopup.toUpperCase()) }), $("#commodity-name").click(function () { "0" == $("#productType").val() || "0" == $("#product").val() ? GlobalCommon.ShowMessageDialog("Bạn chưa chọn Loại Sản Phẩm hoặc Sản Phẩm.\nBạn phải chọn Loại Sản Phẩm -> Sản Phẩm -> Mặt Hàng.", function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") : (InitListCommodity(), ReloadListCommodity(), $("#" + e.Element.ListComodityPopup).modal("show"), $("#" + e.Element.CreateCommodityPopup).css("z-index", 1040)) }), $("#productType").change(function () { GetProductsAndSetValueByProductTypeId($(this).val(), 0) }), $("[save-commo]").click(function () { e.Data.ModelProAna.Description = $("#Description").val(), e.Data.ModelProAna.Name = $("#caproduct option:selected").text(), e.Data.ModelProAna.ObjectId = $("#caproduct option:selected").val(), n(), $("[cancel-commo]").click() }), $("[cancel-commo]").click(function () { $("#productType").val(0), $("#productType").change(), $("#commodity").val("0"), $("#commodity-name").val(""), $("#Description").val(""), $("#productType").prop("disabled", !1), $("#product").prop("disabled", !1), $("#commodity-name").prop("disabled", !1) }), $("#jqxTree").on("expand", function (a) { var t = $("#jqxTree").jqxTree("getItem", a.args.element); 1 == t.level && (e.Data.yearStr = t.label); var n = $(a.args.element), o = !1, r = null, i = n.find("ul:first").children(); if ($.each(i, function () { var e = $("#jqxTree").jqxTree("getItem", this); if (e && "Loading..." == e.label) return r = e, o = !0, !1 }), o && "0" != t.id) { var s = 0; switch (t.value) { case 1: case 2: case 3: case 4: case 5: case 6: case 7: s = 2; break; case 11: s = 13; break; case 13: s = 1 } l(t.id, t.label, s, r) } var p = !1; $.each(e.Data.TreeExpand, function (e, a) { if (parseInt(a) == t.id) return p = !0, !1 }), p || e.Data.TreeExpand.push(-10001 == t.id ? "-10000" : t.id), 0 != e.Data.position && (e.Data.height = e.Data.position), e.Data.isChange = !0 }), $("#jqxTree").on("collapse", function (a) { var t = $("#jqxTree").jqxTree("getItem", a.args.element); null != e.Data.TreeExpand && e.Data.TreeExpand.length > 0 && $.each(e.Data.TreeExpand, function (a, n) { if (n == t.id) { var o = 1, r = !1; if (parseInt(n) >= -999 && n < 0) for (var i = 1; i <= 3; i++) parseInt(e.Data.TreeExpand[a + i]) > 0 && !r ? o++ : r = !0; return e.Data.TreeExpand.splice(a, o), e.Data.TreeExpand.sort(function (e, a) { if (parseInt(e) > parseInt(a)) return e - a }), !1 } }), $("#left").scrollTop(e.Data.height >= e.Data.position ? e.Data.height + 50 : e.Data.position) }), $("#left").scroll(function () { var a = $("#left").scrollTop(); 0 != a && (e.Data.position = a), e.Data.isChange && (e.Data.position += 50), $("#left").scrollTop(e.Data.position), e.Data.isChange = !1 }), $("[re_wk-name]").click(function () { GetWorkshopSelect("wk-name") }), $("[save-workshop]").click(function () { e.Data.ModelProAna.Description = $("#workshop-Description").val(), e.Data.ModelProAna.Name = $("#wk-name option:selected").text(), e.Data.ModelProAna.ObjectId = $("#wk-name option:selected").val(), n(), $("[cancel-workshop]").click() }), $("[cancel-workshop]").click(function () { $("#wk-name").val(""), $("#workshop-Description").val("") }), $("#" + e.Element.CreateWorkShopPopup).on("shown.bs.modal", function () { $("div.divParent").attr("currentPoppup", e.Element.CreateWorkShopPopup.toUpperCase()) }), $("#" + e.Element.CreatePhaseGroupPopup).on("shown.bs.modal", function () { $("div.divParent").attr("currentPoppup", e.Element.CreatePhaseGroupPopup.toUpperCase()) }), $("[re_phasegroup-name]").click(function () { GetPhaseGroupSelect("phaseGroup-name") }), $("[save-phasegroup]").click(function () { e.Data.ModelProAna.Description = $("#phaseGroup-Description").val(), e.Data.ModelProAna.Name = $("#phaseGroup-name option:selected").text(), e.Data.ModelProAna.ObjectId = $("#phaseGroup-name option:selected").val(), n() }), $("[cancel-phasegroup]").click(function () { $("#phaseGroup-name").val(0), $("#phaseGroup-Description").val("") }), $("#" + e.Element.timeprepare_Popup).on("shown.bs.modal", function () { $("#" + e.Element.CreatePhasePopup).hide(), p(), $("div.divParent").attr("currentPoppup", e.Element.timeprepare_Popup.toUpperCase()) }), $("#choose-time").click(function () { var a = $("#" + e.Element.jtable_Timeprepare_Chooise).jtable("selectedRows"); a.length > 0 ? (successCount = 0, flag = !1, a.each(function () { var a = $(this).data("record"); flag = !1, $.each(e.Data.TimePrepareArray, function (e, t) { if (t.TimePrepareId == a.Id) return GlobalCommon.ShowMessageDialog("Thời Gian Chuẩn Bị này đã được chọn. Vui lòng kiểm tra lại.!", function () { }, "Thông báo Thời Gian Chuẩn Bị Tồn Tại"), flag = !0, !1 }), flag || (obj = { Id: a.Id, TimePrepareId: a.Id, Name: a.Name, Code: a.Code, TimeTypePrepareName: a.TimeTypePrepareName, Description: a.Description, TMUNumber: a.TMUNumber }, e.Data.TimePrepareArray.push(obj), successCount++) }), successCount > 0 && ($("#" + e.Element.timeprepare_Popup).modal("hide"), $("#" + e.Element.CreatePhasePopup).show(), s(), $(".jtable-row-selected").removeClass("jtable-row-selected"), e.Data.PhaseModel.IsTimePrepareChange = !0, y()), $("div.divParent").attr("currentPoppup", e.Element.jtablePhase.toUpperCase())) : GlobalCommon.ShowMessageDialog("Không có Thời Gian Chuẩn Bị nào được chọn. Vui lòng kiểm tra lại.!", function () { }, "Thông báo Chưa chọn Thời Gian Chuẩn Bị") }), $("[close-time]").click(function () { $("#" + e.Element.CreatePhasePopup).show(), $("div.divParent").attr("currentPoppup", e.Element.CreatePhasePopup.toUpperCase()) }), $("#" + e.Element.timeprepare_Popup_Search).on("shown.bs.modal", function () { $("#" + e.Element.timeprepare_Popup).css("z-index", 0) }), $("#search-time").click(function () { p(), $("[close-search-time]").click() }), $("[close-search-time]").click(function () { $("#" + e.Element.timeprepare_Popup).css("z-index", 1040), $("#keyword-time").val(""), $("#searchBy-time").val(0), $("#timeType option:eq(0)").prop("selected", !0) }), $("#" + e.Element.CreatePhasePopup).on("shown.bs.modal", function () { $("div.divParent").attr("currentPoppup", e.Element.CreatePhasePopup.toUpperCase()) }), $("#hid_video").change(function () { d() }), $("[save-phase]").click(function () { (function () { { if ("" == $("#phase-name").val().trim()) return GlobalCommon.ShowMessageDialog("Vui Nhập Tên Công Đoạn .", function () { }, "Lỗi Nhập liệu"), !1; if ("" == $("#workersLevel").val() || "0" == $("#workersLevel").val()) return GlobalCommon.ShowMessageDialog("Vui Nhập chọn bậc thợ .", function () { }, "Lỗi Nhập liệu"), !1 } return !0 })() && ("" != $("#video").val() ? function () { if (void 0 !== window.FormData) { for (var a = $("#video").get(0), t = a.files, n = new FormData, o = 0; o < t.length; o++) n.append(t[o].name, t[o]); $.ajax({ url: "/ProAna/UploadVideo", type: "POST", data: n, contentType: !1, processData: !1, beforeSend: function () { $("#loading").show() }, success: function (a) { e.Data.Video = a, $("#hid_video").val(a).change(), $("#loading").hide() }, error: function (e) { alert("Lỗi up hình : " + e.statusText), $("#loading").hide() } }) } else alert("FormData is not supported.") }() : d()) }), $("[cancel-create-phase]").click(function () { e.Data.TimePrepareArray.length = 0, s(), e.Data.PhaseManiVerDetailArray.length = 0, m(), h(), $("div.divParent").attr("currentPoppup", e.Element.jtablePhase.toUpperCase()), e.Data.Video = "", $("#video").val(""), $("#TotalTMU").html("0"), $("#phase-code").html((null == e.Data.PhaseAutoCode || "" == e.Data.PhaseAutoCode ? "" : e.Data.PhaseAutoCode + "-") + (e.Data.phaseLastIndex + 1)) }), $("#" + e.Element.PopupSearchEquipment).on("shown.bs.modal", function () { $("#" + e.Element.PopupChooseEquipment).css("z-index", 0), $("div.divParent").attr("currentPoppup", e.Element.PopupSearchEquipment.toUpperCase()) }), $("[searchEquipment]").click(function () { T(), $("[cancel_search_equip]").click() }), $("[cancel_search_equip]").click(function () { $("#keywordequipment").val(""), $("#" + e.Element.PopupSearchEquipment).modal("hide"), $("#" + e.Element.PopupChooseEquipment).css("z-index", 1040), $("div.divParent").attr("currentPoppup", e.Element.PopupChooseEquipment.toUpperCase()) }), $("#equipmentName").click(function () { T(), $("#" + e.Element.CreatePhasePopup).hide(), $("div.divParent").attr("currentPoppup", e.Element.PopupChooseEquipment.toUpperCase()) }), $("[chooseequipment_popupclose]").click(function () { $("#" + e.Element.CreatePhasePopup).show(), $("div.divParent").attr("currentPoppup", e.Element.CreatePhasePopup.toUpperCase()) }), $("#" + e.Element.CreateManipulationVersion).on("hide.bs.modal", function () { $("#buttonmanipulation").html(""), BindManipulationVersionData(null) }), $("[save-manipulationversion]").click(function () { Check_ManiVersion_Validate() && (obj = { Id: $("#maniVerId").val(), Commo_Ana_PhaseId: e.Data.Commo_Ana_PhaseId, VersionNumber: $("#version-number").val(), IsActive: e.Data.isSave_App_Ac_ManiVersion, IsApprove: e.Data.isApproveManiVersion, Note: $("#mani_ver_note").val(), TotalTMU: $("#mani-ver-TotalTMU").val(), IsDetailChange: e.Data.ManipulationVersionModel.IsDetailChange, PercentWasteEquipment: $("[percentEquipment]").val(), PercentWasteManipulation: $("[percentManipulation]").val(), PercentWasteSpecial: $("[percentDB]").val(), PercentWasteMaterial: $("[percentNPL]").val(), EquipmentId: $("#equipmentId").val(), ApplyPressuresId: $("#ApplyPressure").val() }, e.Data.ManipulationVersionModel = obj, SaveManipulationVersion(), e.Data.IsClear = !1, e.Data.isApproveManiVersion = !1, e.Data.isSave_App_Ac_ManiVersion = !1) }), $("[cancel-create-maniver]").click(function () { BindManipulationVersionData(null), e.Data.PhaseManiVerDetailArray.length = 0, $("#" + e.Element.CreateManipulationVersion).modal("hide"), $("#" + e.Element.CreatePhasePopup).css("z-index", "1041"), e.Data.IsClear = !1, $('#Create-ManipulationVersion-Popup .modal-footer button:contains("Xuất File Excel")').remove() }), $("#tile-parent").change(function () { value = $(this).val(); var a = $("#" + e.Element.JtableTech_Cycle).find("tbody tr"); a.length > 0 && (time_product = 0, a.each(function (a, t) { $(this).find("[percent]").val(value), time = parseFloat(e.Data.TechCycle_Arr[a].StandardTMU), time_per = Math.round(100 * time / parseFloat(value) * 1e3) / 1e3, $($($(this).find("td"))[6]).html(ParseStringToCurrency(time_per)), e.Data.TechCycle_Arr[a].TimeByPercent = time_per, time_product += time_per }), $("#time-product").html(Math.round(1e3 * time_product) / 1e3), e.Data.TimeProductPerCommodity = time_product, g(0)) }), $("#total-worker").change(function () { g(0) }), $("#work-time").change(function () { g(0) }), $("[techsave]").click(function () { !function () { var a = { Id: $("#techId").val(), ParentId: e.Data.ParentID, PricePerSecond: $("#pricePerSecond").val(), Allowance: $("#allowance").val(), NumberOfWorkers: $("#total-worker").val(), WorkingTimePerDay: parseFloat($("#work-time").val()), PacedProduction: parseFloat($("#paced_production").html()), TimeCompletePerCommo: parseFloat($("#time-product").html()), ProOfGroupPerDay: parseFloat($("#pro_group_day").html()), ProOfGroupPerHour: parseFloat($("#productivity").html()), ProOfPersonPerDay: parseFloat($("#pro_person_day").html()), Note: $("#des").val(), details: null, ProductId: e.Data.productId }, t = $("#" + e.Element.JtableTech_Cycle).find("tbody tr"); t.length > 0 && t.each(function (a, t) { e.Data.TechCycle_Arr[a].Description = $($(this).find("[description]")).val(), e.Data.TechCycle_Arr[a].Percent = $($(this).find("[percent]")).val() }); e.Data.TechProcessVersion = a, e.Data.TechProcessVersion.details = e.Data.TechCycle_Arr }(), $.ajax({ url: e.UrlAction.SaveTech, type: "post", data: ko.toJSON(e.Data.TechProcessVersion), contentType: "application/json", beforeSend: function () { $("#loading").show() }, success: function (a) { $("#loading").hide(), GlobalCommon.CallbackProcess(a, function () { "OK" == a.Result ? e.Data.AfterSave ? $("[techexport]").click() : GlobalCommon.ShowMessageDialog("Lưu thành công.", function () { }, "Thông báo") : GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, e.Element.PopupModule, !0, !0, function () { var e = GlobalCommon.GetErrorMessage(a); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }) } }) }), $("[techexport]").click(function () { e.Data.AfterSave ? (window.location.href = e.UrlAction.ExportToExcel + "?parentId=" + e.Data.ParentID, e.Data.AfterSave = !1) : (e.Data.AfterSave = !0, $("[techsave]").click()) }), $("input[percentEquipment]").change(function () { "" != $("input[percentEquipment]").val() && D() }), $("input[percentManipulation]").change(function () { "" != $("input[percentManipulation]").val() && D() }), $("input[percentDB]").change(function () { "" != $("input[percentDB]").val() && D() }), $("input[percentNPL]").change(function () { "" != $("input[percentNPL]").val() && D() }), $("[save-step3]").click(function () { e.Data.ModelProAna.Description = $("#cc-Des").val(), e.Data.ModelProAna.Name = $("#cc-name").val(), n() }), $("[save-phase-ver]").click(function () { CheckPhaseVersionValidate() && (vitri = e.Data.Node.split(",")[1], $.each(e.Data.ProAnaArray, function (a, t) { t.Id != vitri || (e.Data.ModelPhaseVersion.CommodityId = t.ObjectId) }), e.Data.ModelPhaseVersion.Node = e.Data.Node + e.Data.ParentID + ",", e.Data.ModelPhaseVersion.ParentId = e.Data.ParentID, e.Data.ModelPhaseVersion.IsApprove = !1, e.Data.ModelPhaseVersion.IsActive = !1, CreatePhaseVerion()) }), $("[save_app-phase-ver]").click(function () { CheckPhaseVersionValidate() && (vitri = e.Data.Node.split(",")[1], $.each(e.Data.ProAnaArray, function (a, t) { t.Id != vitri || (e.Data.ModelPhaseVersion.CommodityId = t.ObjectId) }), e.Data.ModelPhaseVersion.Node = e.Data.Node + e.Data.ParentID + ",", e.Data.ModelPhaseVersion.ParentId = e.Data.ParentID, e.Data.ModelPhaseVersion.IsApprove = !0, e.Data.ModelPhaseVersion.IsActive = !1, CreatePhaseVerion()) }), $("#" + e.Element.PopupChooisePhase).on("shown", function () { $("#" + e.Element.CreatePhaseVersionPopup).css("z-index", 1040), ReloadListPhase_Choose() }), $("#" + e.Element.PopupChooisePhase).on("hide", function () { $("#" + e.Element.CreatePhaseVersionPopup).css("z-index", 1041) }), $("#" + e.Element.CreatePhaseVersionPopup).on("shown", function () { e.Data.ModelPhaseVersion.IsApprove || e.Data.ModelPhaseVersion.IsActive ? ($("[save_app-phase-ver]").hide(), $("[save-phase-ver]").hide()) : ($("[save_app-phase-ver]").show(), $("[save-phase-ver]").show()) }), $("#maniVersion").change(function () { "0" != $(this).val() && GetPhaseVersionManipulationByManipulationVersionId($(this).val()) }), $("#" + e.Element.CreatePhasePopup).on("shown.bs.modal", function () { e.Data.isInsertPhase && $("#phase-code").html((null == e.Data.PhaseAutoCode || "" == e.Data.PhaseAutoCode ? "" : e.Data.PhaseAutoCode + "-") + (e.Data.phaseLastIndex + 1)) }), $("[cancel-create-phase-ver]").click(function () { e.Data.PhaseVersiondetailArray.length = 0, ReloadListPhaseVerDetailArr(), BindPhaseVersionData(null) }), $("[add-phase]").click(function () { var a = $("#" + e.Element.jtablePhase_Chooise).jtable("selectedRows"); if (a.length > 0) { var t = 0, n = !1; if (a.each(function () { var a = $(this).data("record"); n = !1, $.each(e.Data.PhaseVersiondetailArray, function (e, t) { if (t.Commo_Ana_PhaseId == a.Id) return GlobalCommon.ShowMessageDialog("Công Đoạn này đã được chọn. Vui lòng kiểm tra lại.!", function () { }, "Thông báo Công Đoạn Tồn Tại"), void (n = !0) }), n || (obj = { Id: a.Id, Commo_Ana_PhaseId: a.Id, Como_Ana_PhaseVerId: 0, OrderIndex: e.Data.PhaseVersiondetailArray.length + 1, Name: a.Name, WorkerLevelId: a.WorkerLevelId, WorkerLevelName: a.WorkerLevelName, Code: a.Code, TotalTMU: a.TotalTMU, Description: a.Description }, e.Data.PhaseVersiondetailArray.push(obj), t++) }), t > 0) { $("#" + e.Element.PopupChooisePhase).modal("hide"), $("#" + e.Element.CreateManipulationVersion).css("z-index", 1041), GlobalCommon.ShowMessageDialog("Đã thêm " + t + " Công Đoạn thành công.!", function () { }, "Thông Báo"), ReloadListPhaseVerDetailArr(), $("#" + e.Element.jtablePhase_Chooise).jtable("deselectRows"); var o = 0; $.each(e.Data.PhaseVersiondetailArray, function (e, a) { o += a.TotalTMU }), $("#pver-tmu").val(Math.round(1e3 * o) / 1e3), e.Data.ModelPhaseVersion.TotalTMU = Math.round(1e3 * o) / 1e3, e.Data.ModelPhaseVersion.isDetailsChange = !0 } } else GlobalCommon.ShowMessageDialog("Không có Công Đoạn nào được chọn. Vui lòng kiểm tra lại.!", function () { }, "Thông báo Chưa chọn Công Đoạn") }) }; function t(a) { var t, n; e.Data.ModelProAna = (n = { Id: 0, Name: "", ObjectType: 0, ObjectId: 0, ParentId: 0, Node: "", Description: "" }, null != (t = a) && (n = { Id: ko.observable(t.Id), Name: ko.observable(t.Name), ObjectType: ko.observable(t.ObjectType), ObjectId: ko.observable(t.ObjectId), ParentId: ko.observable(t.ParentId), Node: ko.observable(t.Node), Description: ko.observable(t.Description) }), n), ko.applyBindings(e.Data.ModelProAna, document.getElementById("popup_Commodity")) } function n() { 0 == e.Data.ModelProAna.Id && $.each(e.Data.ProAnaArray, function (a, t) { t.Id != e.Data.ParentID || (e.Data.ModelProAna.Node = t.Node) }), e.Data.ModelProAna.ObjectType = e.Data.ObjectType, e.Data.ModelProAna.ParentId = e.Data.ParentID < 0 ? 0 : e.Data.ParentID, $.ajax({ url: e.UrlAction.SaveProAna, type: "post", data: ko.toJSON(e.Data.ModelProAna), contentType: "application/json", beforeSend: function () { $("#loading").show() }, success: function (a) { $("#loading").hide(), GlobalCommon.CallbackProcess(a, function () { "OK" == a.Result ? (e.Data.year.length = 0, e.Data.month.length = 0, e.Data.ProAnaArray.length = 0, e.Data.TreeSelectItem = null, r(), $("#" + e.Element.CreateCommodityPopup).modal("hide"), $("#" + e.Element.CreateWorkShopPopup).modal("hide"), $("#" + e.Element.CreatePhaseVersionPopup).modal("hide"), $("#" + e.Element.CreatePhaseGroupPopup).modal("hide"), $("#phaseGroup-name").val(""), $("#phaseGroup-Description").val(""), $("#caDescription").val("")) : GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, e.Element.PopupModule, !0, !0, function () { var e = GlobalCommon.GetErrorMessage(a); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }) } }) } function o(a) { $.ajax({ url: e.UrlAction.DeleteProAna, type: "POST", data: JSON.stringify({ Id: a }), contentType: "application/json charset=utf-8", beforeSend: function () { $("#loading").show() }, success: function (t) { $("#loading").hide(), GlobalCommon.CallbackProcess(t, function () { if ("OK" == t.Result) { GlobalCommon.ShowMessageDialog("Xóa Thành Công !.", function () { }, "Thông Báo"); var n = $("#" + a)[0]; $("#jqxTree").jqxTree("removeItem", n), $("#left").scrollTop(e.Data.position) } else GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, e.Element.PopupProAna, !0, !0, function () { var e = GlobalCommon.GetErrorMessage(t); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra.") }) } }) } function r() { e.Data.year.length = 0, e.Data.month.length = 0, e.Data.index = 0, 0 != e.Data.position && (e.Data.height = e.Data.position), $("#jqxTree").jqxTree("clear"); var a = []; if (e.Data.is) t = { id: -1e4, parentid: -10002, text: "<span style='color: red; font-weight:bold; font-size:16px'>Công Ty </span>", value: "0", icon: "/Images/Company.png", iconsize: 14 }; else var t = { id: -10001, parentid: -10002, text: "<span style='color: red; font-weight:bold; font-size:16px'>Công Ty </span>", value: "0", icon: "/Images/Company.png", iconsize: 14 }; a.push(t); var n = { datatype: "json", datafields: [{ name: "id" }, { name: "parentid" }, { name: "text" }, { name: "value" }, { name: "icon" }], id: "id", localdata: a }, o = new $.jqx.dataAdapter(n); o.dataBind(); var r = o.getRecordsHierarchy("id", "parentid", "items", [{ name: "text", map: "label" }]); $("#jqxTree").jqxTree({ source: r, width: "100%" }), $("#jqxTree").jqxTree("refresh"), null != e.Data.TreeSelectItem && $("#jqxTree").jqxTree("expandItem", e.Data.TreeSelectItem); var i = $("#jqxMenu").jqxMenu({ width: "250px", height: "86px", autoOpenPopup: !1, mode: "popup" }); $("#jqxTree li").on("mousedown", function (e) { var a = $(e.target).parents("li:first")[0]; if (function (e) { var a; if (!e) var e = window.event; return e.which ? a = 3 == e.which : e.button && (a = 2 == e.button), a }(e) && null != a) { $("#jqxTree").jqxTree("selectItem", a); var t = $(window).scrollTop(), n = $(window).scrollLeft(); return i.jqxMenu("open", parseInt(e.clientX) + 5 + n, parseInt(e.clientY) + 5 + t), !1 } }), refresh_Tree(), e.Data.is ? l(-1e4, 0, 11, null) : (l(-10001, 0, 11, null), e.Data.is = !0) } function l(a, t, n, o) { $.ajax({ url: e.UrlAction.GetCommoAnaItem, type: "POST", data: JSON.stringify({ parentId: a, value: t, Type: n, year: e.Data.yearStr }), contentType: "application/json charset=utf-8", beforeSend: function () { $("#loading").show() }, success: function (t) { GlobalCommon.CallbackProcess(t, function () { if ("OK" == t.Result) { $("#jqxTree").find("#" + a)[0]; if (n > 10) { if (null != t.Data && null != t.Data.years && t.Data.years.length > 0) { var r = 0; $.each(t.Data.years, function (t, o) { switch (n) { case 11: r = -9999 + e.Data.year.length, e.Data.year.push(o); break; case 12: r = -9999 + e.Data.customer.length, e.Data.customer.push(o); break; case 13: r = -999 + e.Data.month.length, e.Data.month.push(o) } var i = { id: r, parentid: a, text: o, label: o, value: n }; $("#jqxTree").jqxTree("addTo", i, $("#jqxTree").find("#" + a)[0]), i = { id: "a" + r, parentid: r, text: "Loading...", label: "Loading...", value: "0", icon: "" }, $("#jqxTree").jqxTree("addTo", i, $("#jqxTree").find("#" + r)[0]) }) } } else null != t.Data && null != t.Data.CommoAna && t.Data.CommoAna.length > 0 && $.each(t.Data.CommoAna, function (t, n) { var o = { id: n.Id, parentid: a, text: n.Name, label: n.Name, value: n.ObjectType, icon: "/Images/" + e.Data.Images[n.ObjectType] }; $("#jqxTree").jqxTree("addTo", o, $("#jqxTree").find("#" + a)[0]), e.Data.ProAnaArray.push(n), 6 != n.ObjectType && 3 != n.ObjectType && 8 != n.ObjectType && (o = { id: "a" + n.Id, parentid: n.Id, text: "Loading...", label: "Loading...", value: "0", icon: "" }, $("#jqxTree").jqxTree("addTo", o, $("#jqxTree").find("#" + n.Id)[0])) }); null != o && 0 != a && $("#jqxTree").jqxTree("removeItem", o.element), $("#jqxTree").jqxTree("expandItem", $("#" + a)[0]), $("#loading").hide(), e.Data.TreeExpand.length > 0 && $.each(e.Data.TreeExpand, function (a, t) { if (a > e.Data.index) return $("#jqxTree").jqxTree("expandItem", $("#" + t)[0]), e.Data.index = a, !1; a == e.Data.index && e.Data.index == e.Data.TreeExpand.length - 1 && $("#left").scrollTop(e.Data.height >= e.Data.position ? e.Data.height + 50 : e.Data.position) }) } }, !1, e.Element.PopupPosition, !0, !0, function () { var e = GlobalCommon.GetErrorMessage(t); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra.") }) } }) } function s() { $("#" + e.Element.jtable_timeprepare_arr).jtable("load") } function p() { $("#" + e.Element.jtable_Timeprepare_Chooise).jtable("load", { keyword: $("#keyword-time").val(), searchBy: $("#searchBy-time").val() }) } function c() { $("#" + e.Element.jtablePhase).jtable("load", { node: e.Data.Node + e.Data.ParentID }) } function d() { var a = { Id: "" == $("#phaseID").val() ? 0 : $("#phaseID").val(), Name: $("#phase-name").val(), Code: $("#phase-code").html(), Description: $("#phase-Des").val(), EquipmentId: $("#equipmentId").val(), WorkerLevelId: $("#workersLevel").val(), PhaseGroupId: e.Data.ObjectId, ParentId: e.Data.ParentID, TotalTMU: parseFloat($("#TotalTMU").html()), ApplyPressuresId: $("#ApplyPressure").val(), PercentWasteEquipment: $("[percentEquipment]").val(), PercentWasteManipulation: $("[percentManipulation]").val(), PercentWasteSpecial: $("[percentDB]").val(), PercentWasteMaterial: $("[percentNPL]").val(), Node: e.Data.Node, ManiVerTMU: 0, IsDetailChange: e.Data.ManipulationVersionModel.IsDetailChange, actions: e.Data.PhaseManiVerDetailArray, Index: e.Data.phaseLastIndex + 1, Video: e.Data.Video }; $.ajax({ url: e.UrlAction.SavePhase, type: "post", data: JSON.stringify({ phase: a, accessories: e.Data.AccessoriesArray, timePrepares: e.Data.TimePrepareArray }), contentType: "application/json", beforeSend: function () { $("#loading").show() }, success: function (a) { $("#loading").hide(), GlobalCommon.CallbackProcess(a, function () { "OK" == a.Result ? (u(), c(), e.Data.TimePrepareArray.length = 0, s(), $("#phaseName_label").html(""), e.Data.Commo_Ana_PhaseId = 0, e.Data.isInsertPhase || ($("#" + e.Element.CreatePhasePopup).modal("hide"), e.Data.isInsertPhase = !0), $("#phase-name").val(""), $("#TotalTMU").html("0"), $("#phase-Des").val(""), $("#phaseID").val("0"), e.Data.PhaseManiVerDetailArray.length = 0, m(), h(), $("#phase-code").html((null == e.Data.PhaseAutoCode || "" == e.Data.PhaseAutoCode ? "" : e.Data.PhaseAutoCode + "-") + (e.Data.phaseLastIndex + 1)), D()) : GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, e.Element.PopupModule, !0, !0, function () { var e = GlobalCommon.GetErrorMessage(a); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }) } }) } function u() { $.ajax({ url: e.UrlAction.GetLastIndex, type: "POST", data: JSON.stringify({ Id: e.Data.ParentID }), contentType: "application/json charset=utf-8", success: function (a) { "OK" == a.Result ? (e.Data.phaseLastIndex = a.Records, $("#phase-code").html((null == e.Data.PhaseAutoCode || "" == e.Data.PhaseAutoCode ? "" : e.Data.PhaseAutoCode + "-") + (e.Data.phaseLastIndex + 1))) : GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") } }) } function h() { $("#" + e.Element.JtableManipulationArr).jtable("load"), e.Data.PhaseManiVerDetailArray } function m() { var a = { Id: 0, CA_PhaseId: 0, OrderIndex: e.Data.PhaseManiVerDetailArray.length + 1, ManipulationId: 0, ManipulationCode: "", EquipmentId: 0, TMUEquipment: 0, TMUManipulation: 0, Loop: 1, TotalTMU: 0, ManipulationName: "" }; e.Data.PhaseManiVerDetailArray.push(a) } function P(a, t) { (a = a.toUpperCase()).length >= 4 && ("C" == a.substring(0, 1) || "SE" == a.substring(0, 2)) ? function (a, t) { var n = !1; a.indexOf("C") > -1 && "C" == a.substring(0, 1) && (n = !0); 0 == n && a.indexOf("SE") > -1 && "SE" == a.substring(0, 2) && (n = !0); 1 == n && ("" == $("#equipmentId").val() || "" == $("#equiptypedefaultId").val() ? (n = !1, GlobalCommon.ShowMessageDialog("Bạn chưa chọn thiết bị. Vui lòng chọn thiết bị trước", function () { }, "Lỗi thao tác.")) : "C" == a.substring(0, 1) ? $("#equiptypedefaultId").val() != e.Data.EquipTypeDefaultId.C ? (n = !1, GlobalCommon.ShowMessageDialog("Thiết bị bạn chọn không phải là thiết bị cắt. Vui lòng kiểm tra lại", function () { }, "Lỗi thao tác.")) : 0 == $("#ApplyPressure").val() && (n = !1, GlobalCommon.ShowMessageDialog("Bạn chưa chọn số lớp cắt. Vui lòng kiểm tra lại", function () { }, "Lỗi thao tác.")) : "SE" == a.substring(0, 2) && $("#equiptypedefaultId").val() != e.Data.EquipTypeDefaultId.SE && (n = !1, GlobalCommon.ShowMessageDialog("Thiết bị bạn chọn không phải là thiết bị may. Vui lòng kiểm tra lại", function () { }, "Lỗi thao tác."))); if (1 == n) { var o = $("#equipmentId").val(), r = $("#equiptypedefaultId").val(), i = $("#ApplyPressure option:selected").attr("val"); $.ajax({ url: e.UrlAction.GetManipulationEquipmentInfoByCode, type: "POST", data: JSON.stringify({ equipmentId: o, equiptypedefaultId: r, applyPressure: i, code: a }), contentType: "application/json charset=utf-8", beforeSend: function () { $("#loading").show() }, success: function (a) { $("#loading").hide(), GlobalCommon.CallbackProcess(a, function () { "OK" == a.Result ? t && t(a.Data) : GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, e.Element.PopupModule, !0, !0, function () { var e = GlobalCommon.GetErrorMessage(a); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }) } }) } }(a, function (e) { t && t(e) }) : ReloadListManipulation_Choose(a, 2, function () { AddManipulationInfoToListChoose() }) } function D() { if (null != e.Data.PhaseManiVerDetailArray && e.Data.PhaseManiVerDetailArray.length > 0) { var a = 0, t = 0; $.each(e.Data.PhaseManiVerDetailArray, function (e, n) { a += parseFloat(n.TMUEquipment) * n.Loop, t += parseFloat(n.TMUManipulation) * n.Loop }), $("input[totalTMUEquipment]").val(a), $("input[totalTMUManipulation]").val(t); var n = a / e.Data.TMU, o = t / e.Data.TMU; if ($("input[totalTimeEquipment]").val(n), $("input[totalTimeManipulation]").val(o), $("input[totalTMU]").val(a + t), $("input[totalTime]").val(n + o), "" != $("input[percentEquipment]").val()) { var r = parseInt($("input[percentEquipment]").val()); n = 0; "" != $("input[totalTimeEquipment]").val() && (n = parseFloat($("input[totalTimeEquipment]").val())), $("input[totalTimeWasteEquipment]").val(r * n / 100) } if ("" != $("input[percentManipulation]").val()) { r = parseInt($("input[percentManipulation]").val()), o = 0; "" != $("input[totalTimeManipulation]").val() && (o = parseFloat($("input[totalTimeManipulation]").val())), $("input[totalTimeWasteManipulation]").val(r * o / 100) } if ("" != $("input[percentDB]").val()) { r = parseInt($("input[percentDB]").val()); var i = 0; "" != $("input[totalTime]").val() && (i = parseFloat($("input[totalTime]").val())), $("input[totalTimeWasteDB]").val(r * i / 100) } if ("" != $("input[percentNPL]").val()) { r = parseInt($("input[percentNPL]").val()), i = 0; "" != $("input[totalTime]").val() && (i = parseFloat($("input[totalTime]").val())), $("input[totalTimeWasteNPL]").val(r * i / 100) } !function () { var e = 0; "" != $("input[percentEquipment]").val() && (e = parseFloat($("input[percentEquipment]").val())); var a = 0; "" != $("input[percentManipulation]").val() && (a = parseFloat($("input[percentManipulation]").val())); var t = 0; "" != $("input[percentDB]").val() && (t = parseFloat($("input[percentDB]").val())); var n = 0; "" != $("input[percentNPL]").val() && (n = parseFloat($("input[percentNPL]").val())), $("input[totalPercentWaste]").val(e + a + t + n) }(), function () { var e = 0; "" != $("input[totalTimeWasteEquipment]").val() && (e = parseFloat($("input[totalTimeWasteEquipment]").val())); var a = 0; "" != $("input[totalTimeWasteManipulation]").val() && (a = parseFloat($("input[totalTimeWasteManipulation]").val())); var t = 0; "" != $("input[totalTimeWasteDB]").val() && (t = parseFloat($("input[totalTimeWasteDB]").val())); var n = 0; "" != $("input[totalTimeWasteNPL]").val() && (n = parseFloat($("input[totalTimeWasteNPL]").val())), $("input[totalTimeWaste]").val(e + a + t + n) }(), function () { var e = 0; "" != $("input[totalTimeWaste]").val() && (e = parseFloat($("input[totalTimeWaste]").val())); var a = 0; "" != $("input[totalTime]").val() && (a = parseFloat($("input[totalTime]").val())), $("#mani-ver-TotalTMU").val(Math.round(1e3 * (a + e)) / 1e3) }(), y() } } function y() { var a = 0; $.each(e.Data.TimePrepareArray, function (e, t) { a += parseFloat(t.TMUNumber) }); var t = a / e.Data.TMU, n = ("" != $("[totaltime]").val() ? parseFloat($("[totaltime]").val()) : 0) + ("" != $("[totaltimewaste]").val() ? parseFloat($("[totaltimewaste]").val()) : 0); e.Data.PhaseModel.TotalTMU = t + n, $("#TotalTMU").html(Math.round(1e3 * e.Data.PhaseModel.TotalTMU) / 1e3) } function T() { $("#" + e.Element.JtableEquipment).jtable("load", { keyword: $("#keywordequipment").val() }) } function f() { $("#" + e.Element.JtableTech_Cycle).jtable({ title: "Danh sách Công Đoạn", selectShow: !0, actions: { listAction: e.UrlAction.GetTechCycleOfCommodity }, messages: { selectShow: "Ẩn hiện cột" }, fields: { Id: { key: !0, create: !1, edit: !1, list: !1 }, OrderIndex: { title: "STT", width: "3%" }, PhaseCode: { title: "Mã Công Đoạn", width: "3%" }, Name: { visibility: "fixed", title: "Tên Công Đoạn", width: "20%", display: function (e) { return '<span class="blue">' + e.record.Name + "</span>" } }, EquipmentId: { title: "Thiết Bị", width: "5%" }, TotalTMU: { title: "TGian Chuẩn(s)", width: "7%", display: function (e) { return '<span class="red bold">' + e.record.TotalTMU + "</span>" } }, ti_le: { title: 'Tỉ Lệ <br/><input class="form-control" style="width:55px" value="100" type="text" id="tile-parent" onChange="Change()" /> %', width: "5%" }, Time_Percent: { title: "TGian Theo %", width: "10%", sorting: !1, display: function (e) { return '<span class="red bold">' + e.record.Time_Percent + "</span>" } }, NumberOfWorker: { title: "Lao Động", width: "5%", sorting: !1, display: function (e) { return '<span class="red bold">' + e.record.NumberOfWorker + "</span>" } }, Description: { title: "Ghi chú", width: "20%", sorting: !1, display: function (e) { return txt = '<input type="text" value="' + e.record.Description + '" des />', txt } } } }) } function g(a) { total_worker = parseFloat($("#total-worker").val()), total_worktime = parseFloat($("#work-time").val()), total_timePerProduct = e.Data.TimeProductPerCommodity, paced_production = Math.round(total_timePerProduct / total_worker * 1e3) / 1e3, pro_group_per_hour = Math.round(3600 / total_timePerProduct * total_worker * 1e3) / 1e3, pro_group_per_day = Math.round(pro_group_per_hour * total_worktime * 1e3) / 1e3, pro_person_per_day = Math.round(pro_group_per_day / total_worker * 1e3) / 1e3, $("#paced_production").html(paced_production), $("#productivity").html(pro_group_per_hour), $("#pro_group_day").html(pro_group_per_day), $("#pro_person_day").html(pro_person_per_day); var t = $("#" + e.Element.JtableTech_Cycle).find("tbody tr"); t.length > 0 && t.each(function (a, t) { time_per = e.Data.TechCycle_Arr[a].TimeByPercent, laodong = Math.round(time_per / paced_production * 1e3) / 1e3, $($($(this).find("td"))[7]).html(laodong), e.Data.TechCycle_Arr[a].Worker = laodong, laodong }) } $("#jqxMenu").on("itemclick", function (a) { var n = $.trim($(a.args).text()), i = $("#jqxTree").jqxTree("selectedItem"); switch (n) { case "Thêm Mới Mặt Hàng": $("#jqxMenu").jqxMenu("close"), $("#" + e.Element.CreateCommodityPopup).modal("show"), t(null), $("#caproduct").prop("disabled", !1); break; case "Xóa Mặt Hàng": null != i && (e.Data.ParentID = i.parentId, GlobalCommon.ShowConfirmDialog("Bạn có chắc chắn muốn xóa?", function () { o(i.id) }, function () { }, "Đồng ý", "Hủy bỏ", "Thông báo")); break; case "Xem Thông Tin Mặt Hàng": if (null != i) { var l = {}; $.each(e.Data.ProAnaArray, function (e, a) { a.Id != parseInt(i.id) || (l = a) }), t(l), $("#caproduct").val(l.ObjectId), $("#Description").val(l.Description), $("#caproduct").prop("disabled", !0), $("#" + e.Element.CreateCommodityPopup).modal("show") } break; case "Thêm Mới Phân Xưởng": $("#jqxMenu").jqxMenu("close"), $("#" + e.Element.CreateWorkShopPopup).modal("show"), t(null), $("#wk-name").prop("disabled", !1); break; case "Xóa Phân Xưởng": null != i && GlobalCommon.ShowConfirmDialog("Bạn có chắc chắn muốn xóa?", function () { o(i.id), e.Data.ParentID = i.parentId }, function () { }, "Đồng ý", "Hủy bỏ", "Thông báo"); break; case "Xem Thông Tin Phân Xưởng": if (null != i) { l = {}; $.each(e.Data.ProAnaArray, function (e, a) { a.Id != parseInt(i.id) || (l = a) }), t(l), $("#wk-name").val(l.ObjectId), $("#wk-name").prop("disabled", !0), $("#workshop-Description").val(l.Description), $("#" + e.Element.CreateWorkShopPopup).modal("show") } break; case "Thêm Mới Nhóm Công Đoạn": $("#jqxMenu").jqxMenu("close"), $("#" + e.Element.CreatePhaseGroupPopup).modal("show"), t(null), e.Data.ParentID = i.id, $("#phaseGroup-name").prop("disabled", !1); break; case "Xóa Nhóm Công Đoạn": null != i && (e.Data.ParentID = i.parentId, GlobalCommon.ShowConfirmDialog("Bạn có chắc chắn muốn xóa?", function () { o(i.id) }, function () { }, "Đồng ý", "Hủy bỏ", "Thông báo")); break; case "Xem Thông Tin Nhóm Công Đoạn": if (null != i) { l = {}; $.each(e.Data.ProAnaArray, function (e, a) { a.Id != parseInt(i.id) || (l = a) }), t(l), $("#phaseGroup-name").val(l.ObjectId), $("#phaseGroup-name").prop("disabled", !0), $("#phaseGroup-Description").val(l.Description), $("#" + e.Element.CreatePhaseGroupPopup).modal("show") } break; case "Sao Chép Nhóm Công Đoạn": $("#jqxMenu").jqxMenu("close"), e.Data.Copy_CommoAnaPhaseGroupId = i.id; break; case "Dán Nhóm Công Đoạn": $("#jqxMenu").jqxMenu("close"), e.Data.ParentID = i.id, $.ajax({ url: e.UrlAction.Copy_CommoAnaPhaseGroup, type: "POST", data: JSON.stringify({ CopyObjectId: e.Data.Copy_CommoAnaPhaseGroupId, ObjectId: e.Data.ParentID }), contentType: "application/json charset=utf-8", beforeSend: function () { $("#loading").show() }, success: function (a) { $("#loading").hide(), GlobalCommon.CallbackProcess(a, function () { "OK" == a.Result ? ($.ajax({ url: e.UrlAction.GetListnoName, type: "POST", data: "", contentType: "application/json charset=utf-8", success: function (a) { GlobalCommon.CallbackProcess(a, function () { "OK" == a.Result ? (e.Data.year.length = 0, e.Data.month.length = 0, e.Data.index = 0, r(), $("#jqxTree").jqxTree("refresh")) : GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, e.Element.PopupProductType, !0, !0, function () { var e = GlobalCommon.GetErrorMessage(a); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra.") }) } }), e.Data.Copy_CommoAnaPhaseGroupId = 0) : GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, e.Element.PopupProAna, !0, !0, function () { var e = GlobalCommon.GetErrorMessage(a); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra.") }) } }) } 0 != e.Data.position && (e.Data.height = e.Data.position) }), $(document).on("contextmenu", function (e) { return !($(e.target).parents(".jqx-tree").length > 0) }), $("#jqxTree").on("select", function (a) { var t = a.args, n = $("#jqxTree").jqxTree("getItem", t.element); 1 == n.level && (e.Data.yearStr = n.label), e.Data.TreeSelectItem = n, type = parseInt(n.value), e.Data.ObjectType = type + 1, e.Data.ParentID = n.id; var o, r = {}; switch ($.each(e.Data.ProAnaArray, function (a, t) { if (t.Id == n.id) return e.Data.ModelProAna.Node = t.Node, e.Data.Node = t.Node, e.Data.PhaseNode = t.Node + t.Id + ",", $("#txt_commo_anna_phase").attr("phaseNode", t.Node + t.Id + ","), e.Data.ObjectId = t.ObjectId, void (r = t) }), $('[type="1"]').hide(), $('[type="1a"]').hide(), $('[type="2"]').hide(), $('[type="2a"]').hide(), $('[type="6"]').hide(), $('[type="6a"]').hide(), $("#jqxMenu").css("opacity", "1"), $("#jqxMenu").css("height", "83px"), type) { case 11: case 13: $("#jqxMenu").css("opacity", "0"); break; case 0: $('[type="' + (type + 1) + '"]').show(), $("#jqxMenu").css("height", "30px"); break; case 1: $('[type="' + (type + 1) + '"]').show(), $('[type="' + type + 'a"]').show(); break; case 2: $('[type="' + type + 'a"]').show(), $("#jqxMenu").css("height", "56px"); break; case 3: $("#jqxMenu").css("opacity", "0"), $("#" + e.Element.jtablePhase + ",#jtable_tkc").hide(), $("#" + e.Element.jtablePhaseVersion).show(); $.each(e.Data.ProAnaArray, function (a, t) { if (t.Id == r.ParentId) return t.ObjectId, void $.each(e.Data.ProAnaArray, function (a, n) { n.Id != t.ParentId || (e.Data.productId = n.ObjectId) }) }), o = r.Node, $.ajax({ url: e.UrlAction.GetTech, type: "post", data: JSON.stringify({ parentId: e.Data.ParentID, node: o }), contentType: "application/json", beforeSend: function () { $("#loading").show() }, success: function (a) { $("#loading").hide(), GlobalCommon.CallbackProcess(a, function () { if ("OK" == a.Result) { if (e.Data.TechCycle_Arr.length = 0, 0 == a.Data.Id) { $("#techId").val(0), $("#total-worker").val(0); var t = ""; if (a.Data.details.length > 0) { var n = 0; $.each(a.Data.details, function (a, o) { var r = a + 1; o.EquipmentCode = null == o.EquipmentCode ? "" : o.EquipmentCode, t += "<tr>", t += "<td >" + r + "</td>", t += "<td >" + o.PhaseCode + "</td>", t += '<td class="red">' + o.PhaseName + "</td>", t += '<td class="blue">' + o.EquipmentCode + "</td>", t += "<td>" + Math.round(1e3 * o.StandardTMU) / 1e3 + "</td>", t += '<td><input class="form-control" percent type="text" id="percent' + r + '" value="100" onchange ="ResetTime_Percent(\'' + r + "')\" /></td>", t += "<td>" + Math.round(1e3 * o.StandardTMU) / 1e3 + "</td>", t += "<td>0</td>", t += '<td><input class="form-control" description type="text"  value="' + o.Description + '"  /></td>', t += "</tr>", obj = { Id: 0, TechProcessVersionId: 0, CA_PhaseId: o.CA_PhaseId, OrderIndex: r, EquipmentId: null, StandardTMU: o.StandardTMU, Percent: 100, TimeByPercent: o.StandardTMU, Worker: 0, Description: o.Description }, e.Data.TechCycle_Arr.push(obj), n += obj.TimeByPercent }), $("#" + e.Element.JtableTech_Cycle).find("tbody").empty().append(t), $("#time-product").html(Math.round(1e3 * n) / 1e3), e.Data.TimeProductPerCommodity = Math.round(1e3 * n) / 1e3, g(0) } else GlobalCommon.ShowMessageDialog("Sản phẩm này chưa có công đoạn nào được phân tích. Vui lòng kiểm tra lại.", function () { }, "Thông báo") } else if ($("#techId").val(a.Data.Id), $("#total-worker").val(a.Data.NumberOfWorkers), $("#pricePerSecond").val(a.Data.PricePerSecond), $("#allowance").val(a.Data.Allowance), $("#work-time").val(a.Data.WorkingTimePerDay), $("#paced_production").html(Math.round(1e3 * a.Data.PacedProduction) / 1e3), $("#time-product").html(Math.round(1e3 * a.Data.TimeCompletePerCommo) / 1e3), e.Data.TimeProductPerCommodity = a.Data.TimeCompletePerCommo, $("#pro_group_day").html(Math.round(1e3 * a.Data.ProOfGroupPerDay) / 1e3), $("#productivity").html(Math.round(1e3 * a.Data.ProOfGroupPerHour) / 1e3), $("#pro_person_day").html(Math.round(1e3 * a.Data.ProOfPersonPerDay) / 1e3), $("#des").val(a.Data.Note), a.Data.details.length > 0) { t = ""; var o = 0; $.each(a.Data.details, function (a, n) { var r = a + 1; t += "<tr>", t += "<td>" + r + "</td>", t += "<td>" + n.PhaseCode + "</td>", t += "<td>" + n.PhaseName + "</td>", t += '<td><a class="blue" title="' + n.EquipmentName + '">' + n.EquipmentCode + "</a></td>", t += "<td>" + Math.round(1e3 * n.StandardTMU) / 1e3 + "</td>", t += '<td><input class="form-control" percent type="text" id="percent' + r + '" value="' + n.Percent + '" onchange ="ResetTime_Percent(\'' + r + "')\" /></td>", t += "<td>" + Math.round(1e3 * n.TimeByPercent) / 1e3 + "</td>", t += "<td>" + Math.round(1e3 * n.Worker) / 1e3 + "</td>", t += '<td><input class="form-control" description type="text"  value="' + n.Description + '"  /></td>', t += "</tr>", obj = { Id: n.Id, TechProcessVersionId: n.TechProcessVersionId, PhaseId: n.PhaseId, OrderIndex: r, EquipmentId: null, StandardTMU: Math.round(1e3 * n.StandardTMU) / 1e3, Percent: n.Percent, TimeByPercent: Math.round(1e3 * n.TimeByPercent) / 1e3, Worker: Math.round(1e3 * n.Worker) / 1e3, Description: n.Description }, e.Data.TechCycle_Arr.push(obj), o += n.TimeByPercent }), e.Data.TimeProductPerCommodity = Math.round(1e3 * o) / 1e3, $("#" + e.Element.JtableTech_Cycle).find("tbody").empty().append(t), g(0), $("#tile-parent").change() } } else GlobalCommon.ShowMessageDialog("", function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, e.Element.PopupModule, !0, !0, function () { GlobalCommon.GetErrorMessage(a), GlobalCommon.ShowMessageDialog("", function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }) } }), $("div.divParent").attr("currentPoppup", "techprocess".toUpperCase()); break; case 5: $('[type="' + (type + 1) + '"]').show(), 0 != e.Data.Copy_CommoAnaPhaseGroupId ? ($("#paste").show(), $("#jqxMenu").css("height", "56px")) : $("#jqxMenu").css("height", "30px"); break; case 6: $("#jqxMenu").css("height", "83px"), $('[type="' + type + 'a"]').show(), $("#" + e.Element.jtablePhaseVersion).hide(), id = parseInt(e.Data.Node.split(",")[2]), $.each(e.Data.ProAnaArray, function (a, t) { if (t.Id == id) return $("#txt_commo_anna_phase").attr("workshop", t.ObjectId), $("#txt_commo_anna_phase").attr("parentid", e.Data.ParentID), $("#txt_commo_anna_phase").attr("phaseGroup", e.Data.ObjectId), $("#txt_commo_anna_phase").attr("phaseNode", t.Node), !1 }), $("#txt_commo_anna_phase").change(), e.Data.PhaseAutoCode = r.Description, e.Data.phaseLastIndex = 0, $("#" + e.Element.jtablePhase).find(".jtable-title-text").html('Danh Sách Công Đoạn của Nhóm : <span class="red"> ' + n.label + "</span>"), c(), s(), u(), $("#" + e.Element.jtablePhase).show(), $("#techprocess,#jtable_tkc").hide(), $("div.divParent").attr("currentPoppup", e.Element.jtablePhase.toUpperCase()); break; case 8: $("#techprocess,#jtable-phase").hide(), $("#jtable_tkc").show(), $("#jtable_tkc").attr("parentid", e.Data.ParentID), $("#jtable_tkc").attr("node", r.Node), $("#jtable_tkc").attr("pId", r.ParentId), $.each(e.Data.ProAnaArray, function (e, a) { if (a.Id == r.ParentId) return $("#jtable_tkc").attr("wkId", a.ObjectId), $("#jtable_tkc").attr("wkName", a.Name), $("#workshop_").html(a.Name), !1 }), $("#jtable_tkc").change() } }) };