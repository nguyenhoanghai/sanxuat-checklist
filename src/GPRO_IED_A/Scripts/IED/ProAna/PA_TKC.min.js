if ("undefined" == typeof GPRO || !GPRO) var GPRO = {}; GPRO.namespace = function () { var e, t, n, a = arguments, i = null; for (e = 0; e < a.length; e += 1) for (n = ("" + a[e]).split("."), i = GPRO, t = "GPRO" == n[0] ? 1 : 0; t < n.length; t += 1) i[n[t]] = i[n[t]] || {}, i = i[n[t]]; return i }, GPRO.namespace("LaborDivision"), GPRO.LaborDivision = function () {
    function e() { $("#" + D.Element.Jtable).jtable({ title: "Danh sách thiết kế chuyền", paging: !0, pageSize: 50, pageSizeChange: !0, sorting: !0, selectShow: !0, actions: { listAction: D.UrlAction.Gets, createAction: D.Element.Popup }, messages: { selectShow: "Ẩn hiện cột", addNewRecord: "Thêm mới" }, fields: { Id: { key: !0, create: !1, edit: !1, list: !1 }, LineName: { title: "Chuyền", width: "7%", edit: !1 }, TotalPosition: { title: "Tổng Vị Trí", width: "7%", edit: !1, display: function (e) { var t = '<span class="red bold">' + e.record.TotalPosition + "</span> Vị Trí."; return t } }, LastEditer: { title: "Cập nhật cuối", width: "7%", edit: !1 }, LastEditTime: { title: "Giờ cập nhật", width: "7%", edit: !1, display: function (e) { return null != e.record.LastEditTime ? (txt = '<span class="bold red">' + ParseDateToString_cl(parseJsonDateToDate(e.record.LastEditTime)) + "</span>", txt) : void 0 } }, excel: { title: "", width: "1%", sorting: !1, display: function (e) { var t = $('<i   title="Xuất file Excel" class="fa fa-file-excel-o clickable blue"  ></i>'); return t.click(function () { window.location.href = D.UrlAction.ExportExcel + "/" + e.record.Id }), t } }, edit: { title: "", width: "1%", sorting: !1, display: function (e) { var t = $('<i data-toggle="modal" data-target="#' + D.Element.Popup + '" title="Chỉnh sửa thông tin" class="fa fa-pencil-square-o clickable blue"  ></i>'); return t.click(function () { b(e.record.Id) }), t } }, Delete: { title: "", width: "3%", sorting: !1, display: function (e) { var t = $('<button title="Xóa" class="jtable-command-button jtable-delete-command-button"><span>Xóa</span></button>'); return t.click(function () { GlobalCommon.ShowConfirmDialog("Bạn có chắc chắn muốn xóa?", function () { n(e.record.Id) }, function () { }, "Đồng ý", "Hủy bỏ", "Thông báo") }), t } } } }) } function t() { $("#" + D.Element.Jtable).jtable("load", { parentId: $("#jtable_tkc").attr("pId") }) } function n(e) { $.ajax({ url: D.UrlAction.Delete, type: "POST", data: JSON.stringify({ Id: e }), contentType: "application/json charset=utf-8", success: function (e) { GlobalCommon.CallbackProcess(e, function () { "OK" == e.Result ? t() : GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, D.Element.PopupSize, !0, !0, function () { var t = GlobalCommon.GetErrorMessage(e); GlobalCommon.ShowMessageDialog(t, function () { }, "Đã có lỗi xảy ra.") }) } }) } function a() { $.ajax({ url: D.UrlAction.GetTech, type: "post", data: JSON.stringify({ parentId: parseInt($("#" + D.Element.Jtable).attr("parentid")) - 1, node: $("#" + D.Element.Jtable).attr("node") }), contentType: "application/json", beforeSend: function () { $("#loading").show() }, success: function (e) { $("#loading").hide(), GlobalCommon.CallbackProcess(e, function () { if ("OK" == e.Result) if (D.Data.TechProVerId = e.Data.Id, null != e.Data.details && e.Data.details.length > 0) { $("#time-per-commo").html(Math.round(e.Data.TimeCompletePerCommo)), $("#pro-per-person").html(Math.round(e.Data.ProOfPersonPerDay)), $("#pro-group-per-hour").html(Math.round(e.Data.ProOfGroupPerHour)), $("#pro-group-per-day").html(Math.round(e.Data.ProOfGroupPerDay)), $("#paced-product").html(Math.round(e.Data.PacedProduction)), $("#workers").html(e.Data.NumberOfWorkers), $("#time-per-day").html(e.Data.WorkingTimePerDay), $("#note").html(e.Data.Note); var t = "", n = ""; $.each(e.Data.details, function (e, a) { var i = { Id: a.Id, TechProcessVersionId: a.TechProcessVersionId, OrderIndex: a.OrderIndex, PhaseCode: a.PhaseCode, PhaseName: a.PhaseName, StandardTMU: a.StandardTMU, Percent: a.Percent, TimeByPercent: a.TimeByPercent, Worker: a.Worker, Description: a.Description, EquipmentCode: a.EquipmentCode, TotalTMU: a.TotalTMU, SkillRequired: a.SkillRequired, PhaseGroupId: a.PhaseGroupId, Index: a.Index }; D.Data.TechProcessVerDetailArray.push(i), D.Data.PhaseList.push(i), D.Data.BasePhases.push(i), t += '<option value="' + a.PhaseName + '" /> ', n += '<option value="' + (a.PhaseCode.trim() + " (" + a.PhaseName + ")") + '" /> ' }), $("#autoCompleteSource").append(t), $("#autoCompleteSource_Code").append(n) } else GlobalCommon.ShowMessageDialog("Sản phẩm này chưa có quy trình công nghệ không thể thiết kế chuyền được. Vui lòng tạo quy trình công nghệ trước.", function () { }, "Thông báo"), $("#" + D.Element.Jtable).hide(); else GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, D.Element.PopupModule, !0, !0, function () { var t = GlobalCommon.GetErrorMessage(e); GlobalCommon.ShowMessageDialog(t, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }) } }) } function i(e) { if (0 != e && (e = e % 2 == 0 ? e : e + 1, e > 0)) for (var t = 1, n = t + 1; e >= t; t += 2, n += 2) o(t, n) } function o(e, t) { var n = ""; n += '<div id="row_' + e + '" class="line-box" >', n += '  <div id="' + e + '" class="line-left">', n += '      <div class="child">', n += '          <div title="Click Tạo Lối Đi ở Vị Trí này." style="width: 22px;float: left;"><div class="insert-exit" onclick="insert_Exit(\'' + e + "')\"></div>", n += '          <div title="Click Tạo đường vào BTP ở Vị Trí này." class="insert-btp" onclick="insert_BTP(\'' + e + "')\"></div> ", n += '          <div title="Click Xóa Vị Trí." class="delete" onclick="delete_Po(\'' + e + "')\"></div></div>", n += '          <div class="main-info c-left" >', n += '              <div  class="line-child-box">', n += '              <div class="top"> ', n += '                  <div id="phase"></div>', n += '                  <div style="clear: both"></div>', n += "              </div>", n += '              <div class="bottom bold red" style="background-image: linear-gradient( rgb(247, 234, 236),rgb(255, 236, 239),rgb(255, 236, 239)) !important" onclick="ChooseEmployee(\'' + e + '\')" data-toggle="modal" list="autoCompleteSource" data-target="#' + D.Element.Popup_position + '">Chọn Nhân Viên ...</div>', n += "          </div>", n += "      </div>", n += '      <div class="equipment" ><div ></div></div>', n += '      <div style="clear: left"></div>', n += '      <div class="exit e-left" style="background-image: linear-gradient( #0000FF,#0000FF,#0000FF) !important;">Lối Đi</div>', n += "  </div>", n += "  </div>", n += '  <div class="line-center" style ="background-image: linear-gradient( #FFD700,#FFD700,#FFD700) !important;' + (0 == e ? "border-top:1px solid #ccc" : "") + (8 == e ? "border-bottom:1px solid #ccc" : "") + '"></div>', n += '      <div id="' + t + '" class="line-right">', n += '          <div class="child">', n += '              <div class="equipment"><div style="transform:rotate(-90deg); -webkit-transform:rotate(-90deg); -ms-transform:rotate(-90deg); max-width:50px"></div></div>', n += '              <div class="main-info c-right"  >', n += '                  <div id="' + t + '" class="line-child-box">', n += '                  <div class="top"> ', n += '                      <div id="phase"></div>', n += '                      <div style="clear: both"></div>', n += "                  </div>", n += '                  <div class="bottom bold red" style="background-image: linear-gradient( rgb(247, 234, 236),rgb(255, 236, 239),rgb(255, 236, 239)) !important ;" onclick="ChooseEmployee(\'' + t + '\')" data-toggle="modal" data-target="#' + D.Element.Popup_position + '">Chọn Nhân Viên ...</div>', n += "              </div>", n += "          </div>", n += '          <div title="Click Tạo đường vào BTP ở Vị Trí này." class="insert-btp" onclick="insert_BTP(\'' + t + "')\"></div>", n += '          <div style="clear: left"></div>', n += '          <div class="exit e-right" style="background-image: linear-gradient( #0000FF,#0000FF,#0000FF) !important;">Lối Đi</div>', n += "      </div>", n += "  </div>", n += '  <div style="clear: left"></div>', n += "</div>"; var a = { Id: 0, TechProVer_Id: parseInt($("#url").attr("TechProVerId")), OrderIndex: e, EmployeeId: null, EmployeeName: "", IsHasExitLine: !1, IsHasBTP: !1, Details: [] }; D.Data.Position_Arr.push(a), a = { Id: 0, TechProVer_Id: parseInt($("#url").attr("TechProVerId")), OrderIndex: t, EmployeeId: null, EmployeeName: "", IsHasExitLine: !1, IsHasBTP: !1, Details: [] }, D.Data.Position_Arr.push(a), $("#line-box").html(n + $("#line-box").html()) } function r(e) { if (D.Data.Position_Arr.length = 0, $("#line-box").empty(), e.length > 0 && (rows = (e.length - 1) % 2 == 0 ? (e.length - 1) / 2 : parseInt((e.length - 1) / 2) + 1, str_left = "", str_right = "", str = "", rows > 0)) { for (var t = 1, n = t + 1; t <= e.length; t += 2, n += 2) { var a = "", i = "", o = 0, r = 0, l = "", d = !1; str = "", $.each(e, function (e, n) { if (n.OrderIndex == t) { a += "<table>", l += '<table style="width:100%"><tr>'; var s = !1, c = []; $.each(n.Details, function (e, t) { $.each(D.Data.PhaseList, function (e, n) { return t.TechProVerDe_Id == n.Id ? (n.De_Percent += t.DevisionPercent, a += "<tr>", a += '<td class="code">' + n.PhaseCode + "</td>", a += '<td class="pname">' + n.PhaseName + "</td>", a += '<td class="tmu">' + Math.round(n.TimeByPercent) + "</td>", a += '<td class="per blue">' + t.DevisionPercent + "</td>", a += '<td class="labor red">' + Math.round(10 * t.NumberOfLabor) / 10 + "</td>", a += "</tr>", c.length > 0 ? ($.each(c, function (e, t) { return t == n.EquipmentCode ? (s = !0, !1) : void 0 }), s || null == n.EquipmentCode || (i += n.EquipmentCode + "<br/>", c.push(n.EquipmentCode))) : "" != n.EquipmentCode && (c.push(n.EquipmentCode), i += n.EquipmentCode + "<br/>"), o += n.TimeByPercent, r += t.NumberOfLabor, !1) : void 0 }) }); var h = { Id: 0, Line_PositionId: n.Id, IsPass: !1, TechProVerDe_Id: 0, PhaseCode: "", PhaseName: "", EquipmentId: 0, EquipmentCode: "", TotalTMU: 0, PhaseGroupId: 0, SkillRequired: 0, TotalLabor: 0, DevisionPercent: 0, DevisionPercent_Temp: 0, NumberOfLabor: 0, Note: "", OrderIndex: n.Details.length + 1 }; n.Details.push(h); var p = n.EmployeeName + "" == "null" ? "...  Chọn  Nhân Viên  ..." : n.EmployeeName; return a += "</table>", l += '<td class="pname" style="width:75%">' + p + "</td>", l += '<td class="tmu" style="width:12%;">' + Math.round(o) + "</td>", l += '<td class="labor" style="width:12%; border-right:none">' + Math.round(10 * r) / 10 + "</td>", l += "</tr></table>", n.IsHasBTP && (d = !0), D.Data.Position_Arr.push({ Id: n.Id, TechProVer_Id: n.TechProVer_Id, OrderIndex: n.OrderIndex, EmployeeId: n.EmployeeId, EmployeeName: n.EmployeeName, IsHasExitLine: n.IsHasExitLine, IsHasBTP: n.IsHasBTP, Details: n.Details }), !1 } }), "" == a && "" == l && (l = "Chọn Nhân Viên ..."), str += '<div id="row_' + t + '" class="line-box" style ="' + (0 == t ? "margin-top:20px" : "") + '">', str += '  <div id="' + t + '" class="line-left">', str += '      <div class="child">', str += '         <div title="Click Tạo Lối Đi ở Vị Trí này." style="width: 22px;float: left;"> <div class="insert-exit" onclick=insert_Exit(\'' + t + "')></div>", str += '          <div title="Click Tạo đường vào BTP ở Vị Trí này." class="insert-btp ' + (d ? "insert-hover" : "") + "\" onclick=insert_BTP('" + t + "')></div>", str += '          <div title="Click Xóa Vị Trí." class="delete" onclick="delete_Po(\'' + t + "')\"></div></div>", str += '          <div class="main-info c-left" >', str += '              <div  class="line-child-box">', str += '              <div class="top"> ', str += '                  <div id="phase">' + a + "</div>", str += '                  <div style="clear: both"></div>', str += "              </div>", str += '              <div class="bottom bold red" style="background-image: linear-gradient( rgb(247, 234, 236),rgb(255, 236, 239),rgb(255, 236, 239)) !important" onclick="ChooseEmployee(\'' + t + '\')" data-toggle="modal" list="autoCompleteSource" data-target="#' + D.Element.Popup_position + '">' + l + "</div>", str += "          </div>", str += "      </div>", str += '      <div class="equipment" ><div style="transform:rotate(-90deg); -webkit-transform:rotate(-90deg); -ms-transform:rotate(-90deg); max-width:50px ">' + i + "</div></div>", str += '      <div style="clear: left"></div>', str += '      <div class="exit e-left" style="background-image: linear-gradient( #0000FF,#0000FF,#0000FF) !important;">Lối Đi</div>', str += "  </div>", str += "  </div>"; var a = "", i = "", o = 0, r = 0, l = "", d = !1; $.each(e, function (e, t) { if (t.OrderIndex == n) { a += "<table>", l += '<table style="width:100%"><tr>'; var s = !1, c = []; $.each(t.Details, function (e, t) { $.each(D.Data.PhaseList, function (e, n) { return t.TechProVerDe_Id == n.Id ? (n.De_Percent += t.DevisionPercent, a += "<tr>", a += '<td class="code">' + n.PhaseCode + "</td>", a += '<td class="pname">' + n.PhaseName + "</td>", a += '<td class="tmu">' + Math.round(n.TimeByPercent) + "</td>", a += '<td class="per blue">' + t.DevisionPercent + "</td>", a += '<td class="labor red">' + Math.round(10 * t.NumberOfLabor) / 10 + "</td>", a += "</tr>", c.length > 0 ? ($.each(c, function (e, t) { return t == n.EquipmentCode ? (s = !0, !1) : void 0 }), s || null == n.EquipmentCode || (i += n.EquipmentCode + "<br/>", c.push(n.EquipmentCode))) : (c.push(n.EquipmentCode), i += n.EquipmentCode + "<br/>"), o += n.TimeByPercent, r += t.NumberOfLabor, !1) : void 0 }) }); var h = { Id: 0, Line_PositionId: t.Id, IsPass: !1, TechProVerDe_Id: 0, PhaseCode: "", PhaseName: "", EquipmentId: 0, EquipmentCode: "", TotalTMU: 0, PhaseGroupId: 0, SkillRequired: 0, TotalLabor: 0, DevisionPercent: 0, DevisionPercent_Temp: 0, NumberOfLabor: 0, Note: "", OrderIndex: t.Details.length + 1 }; t.Details.push(h); var p = t.EmployeeName + "" == "null" ? "...  Chọn  Nhân Viên  ..." : t.EmployeeName; return a += "</table>", l += '<td class="pname" style="width:75%">' + p + "</td>", l += '<td class="tmu" style="width:12%;">' + Math.round(o) + "</td>", l += '<td class="labor" style="width:12%; border-right:none">' + Math.round(10 * r) / 10 + "</td>", l += "</tr></table>", t.IsHasBTP && (d = !0), D.Data.Position_Arr.push({ Id: t.Id, TechProVer_Id: t.TechProVer_Id, OrderIndex: t.OrderIndex, EmployeeId: t.EmployeeId, EmployeeName: t.EmployeeName, IsHasExitLine: t.IsHasExitLine, IsHasBTP: t.IsHasBTP, Details: t.Details }), !1 } }), "" == a && "" == l && (l = "Chọn Nhân Viên ..."), str += '  <div class="line-center" style ="background-image: linear-gradient( #FFD700,#FFD700,#FFD700) !important;' + (0 == t ? "border-top:1px solid #ccc" : "") + (8 == t ? "border-bottom:1px solid #ccc" : "") + '"></div>', str += '      <div id="' + n + '" class="line-right">', str += '          <div class="child">', str += '              <div class="equipment"><div style="transform:rotate(-90deg); -webkit-transform:rotate(-90deg); -ms-transform:rotate(-90deg); max-width:50px ">' + i + "</div></div>", str += '              <div class="main-info c-right"  >', str += '                  <div id="' + n + '" class="line-child-box">', str += '                  <div class="top"> ', str += '                      <div id="phase">' + a + "</div>", str += '                      <div style="clear: both"></div>', str += "                  </div>", str += '                  <div class="bottom bold red" style="background-image: linear-gradient( rgb(247, 234, 236),rgb(255, 236, 239),rgb(255, 236, 239)) !important ;" onclick="ChooseEmployee(\'' + n + '\')" data-toggle="modal" data-target="#' + D.Element.Popup_position + '">' + l + "</div>", str += "              </div>", str += "          </div>", str += '          <div title="Click Tạo đường vào BTP ở Vị Trí này." class="insert-btp ' + (d ? "insert-hover" : "") + "\" onclick=insert_BTP('" + n + "')></div>", str += '          <div style="clear: left"></div>', str += '          <div class="exit e-right" style="background-image: linear-gradient( #0000FF,#0000FF,#0000FF) !important;">Lối Đi</div>', str += "      </div>", str += "  </div>", str += '  <div style="clear: left"></div>', str += "</div>", $("#line-box").html(str + $("#line-box").html()) } D.Data.Index = 0, s() } } function s() { if (0 == D.Data.Index) for (var e = 1, t = e + 1; e <= D.Data.Position_Arr.length; e += 2, t += 2) { var n = $($("#" + e).parent().find(".line-left")).find(".main-info #phase").height(), a = $($("#" + t).parent().find(".line-right")).find(".main-info #phase").height(); if (n > a) { var i = $($("#" + e).parent().find(".line-left")).find(".main-info").height(); $($("#" + e).parent().find(".line-left")).find(".main-info #phase").css("min-height", n), $($("#" + t).parent().find(".line-right")).find(".main-info #phase").css("min-height", n), $("#" + e).parent().find(".equipment").css("height", i), $("#" + e).parent().find(".equipment div").css("margin", i / 3 + "px 0 0 0"), $("#row_" + e).find(".line-center").css("min-height", $("#" + e).parent().find(".line-left").css("height")) } else { var i = $($("#" + t).parent().find(".line-right")).find(".main-info").height(); $($("#" + e).parent().find(".line-left")).find(".main-info #phase").css("min-height", a), $($("#" + t).parent().find(".line-right")).find(".main-info #phase").css("min-height", a), $("#" + e).parent().find(".equipment").css("height", i), $("#" + e).parent().find(".equipment div").css("margin", i / 3 + "px 0 0 0"), $("#row_" + e).find(".line-center").css("min-height", $("#" + e).parent().find(".line-right").css("height")) } $.each(D.Data.Position_Arr, function (t, n) { return n.OrderIndex == e && n.IsHasExitLine ? (l(e), !1) : void 0 }) } else { var n = $($("#" + D.Data.Index).parent().find(".line-left")).find(".main-info #phase").height(), a = $($("#" + D.Data.Index).parent().find(".line-right")).find(".main-info #phase").height(); if (n > a) { var i = $($("#" + D.Data.Index).parent().find(".line-left")).find(".main-info").height(); $($("#" + D.Data.Index).parent().find(".line-left")).find(".main-info #phase").css("min-height", n), $($("#" + D.Data.Index).parent().find(".line-right")).find(".main-info #phase").css("min-height", n), $("#" + D.Data.Index).parent().find(".equipment").css("height", i), $("#" + D.Data.Index).parent().find(".equipment div").css("margin", i / 3 + "px 0 0 0"), $("#row_" + D.Data.Index).find(".line-center").css("min-height", $("#" + D.Data.Index).parent().find(".line-left").css("height")) } else { var i = $($("#" + D.Data.Index).parent().find(".line-right")).find(".main-info").height(); $($("#" + D.Data.Index).parent().find(".line-left")).find(".main-info #phase").css("min-height", a), $($("#" + D.Data.Index).parent().find(".line-right")).find(".main-info #phase").css("min-height", a), $("#" + D.Data.Index).parent().find(".equipment").css("height", i), $("#" + D.Data.Index).parent().find(".equipment div").css("margin", i / 3 + "px 0 0 0"), $("#row_" + D.Data.Index).find(".line-center").css("min-height", $("#" + D.Data.Index).parent().find(".line-right").css("height")) } } } function l(e) { "block" == $($("#" + e).find(".exit")).css("display") ? ($($("#" + e).parent().find(".exit")).hide(), $.each(D.Data.Position_Arr, function (t, n) { return parseInt(e) == n.OrderIndex ? (n.IsHasExitLine = !1, $($("#" + e).parent().find(".insert-exit")).removeClass("insert-hover"), !1) : void 0 })) : ($($("#" + e).parent().find(".exit")).show(), $.each(D.Data.Position_Arr, function (t, n) { return parseInt(e) == n.OrderIndex ? (n.IsHasExitLine = !0, $($("#" + e).parent().find(".insert-exit")).addClass("insert-hover"), !1) : void 0 })) } function d(e) { var t = $("#" + e).find(".insert-btp"); t.hasClass("insert-hover") ? (t.removeClass("insert-hover"), $.each(D.Data.Position_Arr, function (t, n) { return parseInt(e) == n.OrderIndex ? (n.IsHasBTP = !1, !1) : void 0 })) : (t.addClass("insert-hover"), $.each(D.Data.Position_Arr, function (t, n) { return parseInt(e) == n.OrderIndex ? (n.IsHasBTP = !0, !1) : void 0 })) } function c(e) { $("#line-box").find("#row_" + e).remove(), D.Data.Position_Arr.splice(e - 1, 2), $("#tkc_sl_line").val(parseInt($("#tkc_sl_line").val()) - 2) } function h(e) { var t = parseInt(e); D.Data.Index = t; var n = 0; 0 == D.Data.Position_Arr[t - 1].Details.length ? m() : $.each(D.Data.Position_Arr[t - 1].Details, function (e, t) { var a = { Id: t.Id, Line_PositionId: t.Line_PositionId, IsPass: t.IsPass, TechProVerDe_Id: t.TechProVerDe_Id, PhaseCode: t.PhaseCode, PhaseName: t.PhaseName, EquipmentId: t.EquipmentId, EquipmentCode: t.EquipmentCode, TotalTMU: t.TotalTMU, PhaseGroupId: t.PhaseGroupId, SkillRequired: t.SkillRequired, TotalLabor: t.TotalLabor, DevisionPercent: t.DevisionPercent, DevisionPercent_Temp: t.DevisionPercent_Temp, NumberOfLabor: t.NumberOfLabor, Note: t.Note, OrderIndex: t.OrderIndex, Index: t.Index }; D.Data.Phase_Arr.push(a), n += t.NumberOfLabor }), $("#total_worker").val(Math.round(100 * n) / 100), $("#tkc_Employee").val(null == D.Data.Position_Arr[t - 1].EmployeeId ? 0 : D.Data.Position_Arr[t - 1].EmployeeId), u() } function p() { $("#" + D.Element.JtablePhase_Arr).jtable({ title: "Danh Sách Công Đoạn Được Phân", pageSizeChangeSize: !0, selectShow: !0, actions: { listAction: D.Data.Phase_Arr }, messages: { selectShow: "Ẩn hiện cột" }, fields: { Id: { key: !0, create: !1, edit: !1, list: !1 }, PhaseCode: { visibility: "fixed", title: "Mã Công Đoạn", width: "20%", display: function (e) { var t = "" != e.record.PhaseCode ? e.record.PhaseCode + " (" + e.record.PhaseName + ")" : "", n = $('<input type="text" code_' + e.record.OrderIndex + ' list="autoCompleteSource_Code" class="form-control" techProVerId="' + e.record.TechProVerDe_Id + '" value="' + t + '" />'); return n.keypress(function (e) { var t = e.which ? e.which : event.keyCode; 13 == t && n.change() }), n.change(function () { if ("" != n.val() && n.val() != t) { var a = !1, i = !0; $.each(D.Data.Phase_Arr, function (t, i) { return i.PhaseCode.trim() + " (" + i.PhaseName + ")" == n.val().trim() ? (a = !0, GlobalCommon.ShowMessageDialog("Công Đoạn này đã được Phân Công. Vui lòng chọn Công Đoạn khác.", function () { }, "Thông Báo"), n.val(e.record.PhaseCode), !1) : void 0 }), a || ($.each(D.Data.PhaseList, function (t, a) { return a.PhaseCode.trim() + " (" + a.PhaseName + ")" == n.val() ? (100 == a.De_Percent ? (GlobalCommon.ShowMessageDialog('Số Lao Động của Công Đoạn : <span class="red bold">' + a.PhaseCode + "</span> đã được Phân Công hết.\nVui lòng chọn Công Đoạn khác.", function () { }, "Thông Báo"), n.val(e.record.PhaseCode), i = !1) : (e.record.TechProVerDe_Id = a.Id, e.record.PhaseCode = a.PhaseCode, e.record.PhaseName = a.PhaseName, e.record.SkillRequired = a.SkillRequired, e.record.PhaseGroupId = a.PhaseGroupId, e.record.TotalTMU = a.TimeByPercent, e.record.TotalLabor = a.Worker, e.record.NumberOfLabor = 0, e.record.DevisionPercent = 0, e.record.EquipmentId = a.EquipmentId, e.record.EquipmentCode = a.EquipmentCode, e.record.Index = a.Index, 0 == a.De_Percent || "undefined" == typeof a.De_Percent ? (e.record.DevisionPercent_Temp = 100, e.record.NumberOfLabor = a.Worker) : a.Worker * (100 - a.De_Percent) / 100 < 1.2 && (e.record.DevisionPercent_Temp = 100 - a.De_Percent, e.record.NumberOfLabor = a.Worker * (100 - a.De_Percent) / 100), e.record.OrderIndex == D.Data.Phase_Arr.length && m(), u(), i = !1, f(), $("[code_" + D.Data.Phase_Arr.length + "]").focus()), !1) : void 0 }), i && (GlobalCommon.ShowMessageDialog('Không tìm thấy Thông tin của Công Đoạn "<span class="red bold">' + n.val() + '</span>".\nVui lòng chọn Công Đoạn khác.', function () { }, "Thông Báo"), n.val(e.record.PhaseCode))) } }), n.click(function () { n.select() }), n.focusout(function () { n.change() }), n.autocomplete({ source: D.Data.Code }), n } }, EquipmentCode: { title: "Thiết Bị", width: "3%", display: function (e) { if (null != e.record.EquipmentCode) { var t = '<span class="red  ">' + e.record.EquipmentCode + "</span>"; return t } } }, TotalTMU: { title: "Tổng TG (s)", width: "5%", display: function (e) { var t = '<span class="blue  ">' + Math.round(e.record.TotalTMU) + "</span>"; return t } }, TotalLabor: { title: "Tổng LĐ có thể PC", width: "5%", display: function (e) { var t = '<span class="red bold">' + Math.round(1e3 * e.record.TotalLabor) / 1e3 + "</span>"; return t } }, DevisionPercent: { title: "Tỷ Lệ", width: "5%", display: function (e) { var t = $('<input type="text" class="form-control center" value="' + e.record.DevisionPercent_Temp + '" onkeypress=" return isNumberKey(event)"/>'); return t.click(function () { t.select() }), t.change(function () { $.each(D.Data.PhaseList, function (n, a) { if (a.Id == e.record.TechProVerDe_Id) { if (parseFloat(t.val()) > 0 && parseFloat(t.val()) <= 100) { a.De_Percent - e.record.DevisionPercent + parseFloat(t.val()) > 100 && (GlobalCommon.ShowMessageDialog('Số Lao Động của Công Đoạn : <span class="red bold">' + a.PhaseCode + '</span> chỉ còn lại <span class="red bold">' + (100 - a.De_Percent) + "%</span>.\nVui lòng Phân Công trong khoảng cho phép.", function () { }, "Thông Báo"), t.val(e.record.DevisionPercent_Temp)); var i = a.Worker * parseFloat(t.val()) / 100; e.record.NumberOfLabor = i, e.record.DevisionPercent_Temp = parseFloat(t.val()), u(), f() } else GlobalCommon.ShowMessageDialog('Tỷ Lệ Phân Công phải lớn hơn <span class="red bold">0</span> và nhỏ hơn <span class="red bold">100%</span>.', function () { }, "Thông Báo"), t.val(e.record.DevisionPercent_Temp); return !1 } }) }), t } }, NumberOfLabor: { title: "Số LĐ PC", width: "5%", display: function (e) { var t = '<span class="red bold">' + Math.round(1e3 * e.record.NumberOfLabor) / 1e3 + "</span>"; return t } }, Note: { title: "Ghi Chú", width: "5%", display: function (e) { var t = $('<input pNote class="form-control" type="text" value="' + e.record.Note + '"></input>'); return t.change(function () { e.record.Note = t.val() }), t } }, Delete: { title: "", width: "3%", sorting: !1, display: function (e) { var t = $('<button title="Xóa" class="jtable-command-button jtable-delete-command-button"><span>Xóa</span></button>'); return t.click(function () { GlobalCommon.ShowConfirmDialog("Bạn có chắc chắn muốn xóa?", function () { $.each(D.Data.Phase_Arr, function (t, n) { if (n.TechProVerDe_Id == e.record.TechProVerDe_Id) { D.Data.Phase_Arr.splice(t, 1); for (var a = t; a < D.Data.Phase_Arr.length; a++) D.Data.Phase_Arr[a].OrderIndex = a + 1; return u(), $("[code_" + D.Data.Phase_Arr.length + "]").focus(), !1 } }), f() }, function () { }, "Đồng ý", "Hủy bỏ", "Thông báo") }), t } } } }) } function u() { $("#" + D.Element.JtablePhase_Arr).jtable("load") } function m() { var e = { Id: 0, Line_PositionId: 0, IsPass: !1, TechProVerDe_Id: 0, PhaseCode: "", PhaseName: "", EquipmentId: 0, EquipmentCode: "", TotalTMU: 0, PhaseGroupId: 0, SkillRequired: 0, TotalLabor: 0, DevisionPercent: 0, DevisionPercent_Temp: 0, NumberOfLabor: 0, Note: "", OrderIndex: D.Data.Phase_Arr.length + 1 }; D.Data.Phase_Arr.push(e) } function f() { var e = 0; $.each(D.Data.Phase_Arr, function (t, n) { e += n.NumberOfLabor }), $("#total_worker").val(Math.round(10 * e) / 10), e > 1.2 && GlobalCommon.ShowMessageDialog("Tổng Lao Động Phân công cho Vị Trí này đã lớn hơn 1.2 Lao Động.", function () { }, "Thông Báo") } function v() { var e = "<table>", t = "", n = 0, a = 0, i = []; $.each(D.Data.Position_Arr[D.Data.Index - 1].Details, function (o, r) { if (o < D.Data.Position_Arr[D.Data.Index - 1].Details.length - 1) { if (e += "<tr>", e += '<td class="code">' + r.PhaseCode + "</td>", e += '<td class="pname">' + r.PhaseName + "</td>", e += '<td class="tmu ">' + Math.round(r.TotalTMU) + "</td>", e += '<td class="per blue">' + Math.round(r.DevisionPercent) + "</td>", e += '<td class="labor red">' + Math.round(100 * r.NumberOfLabor) / 100 + "</td>", e += "</tr>", i.length > 0 && "" != r.EquipmentCode) { var s = !1; $.each(i, function (e, t) { return t == r.EquipmentCode.trim() ? (s = !0, !1) : void 0 }), s || (t += r.EquipmentCode.trim() + "<br/>", i.push(r.EquipmentCode.trim())) } else "" != r.EquipCode && (t += r.EquipmentCode + "<br/>", i.push(r.EquipmentCode)); n += Math.round(r.TotalTMU), a += r.NumberOfLabor } }), e += "</table>"; var o = '<table style="width:100%"><tr>'; o += '<td class="pname" style="width:75%">' + D.Data.Position_Arr[D.Data.Index - 1].EmployeeName + "</td>", o += '<td class="tmu" style="width:12%">' + Math.round(n) + "</td>", o += '<td class="labor" style="width:12%; border-right:none">' + Math.round(100 * a) / 100 + "</td>", o += "</tr><table>", $("#" + D.Data.Index).find("#phase").html(e), $("#" + D.Data.Index).find(".equipment div").html(t), $("#" + D.Data.Index).find(".bottom").html(o), s() } function P(e) { $.ajax({ url: "/Employee/GetEmployWithSkill", type: "post", data: "", contentType: "application/json", beforeSend: function () { $("#loading").show() }, success: function (t) { GlobalCommon.CallbackProcess(t, function () { if ("OK" == t.Result) { var n = '<option value="0" >Không Có Dữ Liệu Nhân Viên</option>'; D.Data.EmployeeArr.length = 0, t.Data.length > 0 && (n = "", $.each(t.Data, function (e, t) { D.Data.EmployeeArr.push(t), n += '<option value="' + t.EmployeeId + '" >' + t.EmployeeName + " (" + t.EmployeeCode + ")</option>" }), $("#" + e).empty().append(n), $("#loading").hide()) } else GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, "", !0, !0, function () { var e = GlobalCommon.GetErrorMessage(t); GlobalCommon.ShowMessageDialog(e, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }) } }) } function g(e) { $.ajax({ url: D.UrlAction.Save, type: "post", data: JSON.stringify({ model: JSON.stringify(e) }), contentType: "application/json", beforeSend: function () { $("#loading").show() }, success: function (e) { $("#loading").hide(), GlobalCommon.CallbackProcess(e, function () { "OK" == e.Result ? ($("[tkc_cancel]").click(), t()) : GlobalCommon.ShowMessageDialog(msg, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, D.Element.PopupModule, !0, !0, function () { var t = GlobalCommon.GetErrorMessage(e); GlobalCommon.ShowMessageDialog(t, function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }) } }) } function b(e) { $.ajax({ url: D.UrlAction.GetById, type: "post", data: JSON.stringify({ labourId: e }), contentType: "application/json", beforeSend: function () { $("#loading").show() }, success: function (e) { GlobalCommon.CallbackProcess(e, function () { "OK" == e.Result ? ($("#tkc_id").val(e.Records.Id), $("#tkc_lineName").val(e.Records.LineId), D.Data.TechProVerId = e.Records.TechProVer_Id, D.Data.CodeOption = '<option value="0" >Chọn ...</option>', D.Data.NameOption = '<option value="0" >Chọn ...</option>', D.Data.Code.length = 0, D.Data.Name.length = 0, D.Data.PhaseList.length = 0, $.each(e.Records.TechProcess.details, function (e, t) { D.Data.PhaseList.push(t), D.Data.CodeOption += '<option value="' + t.Id + '" >' + t.PhaseCode + "</option>", D.Data.NameOption += '<option value="' + t.Id + '" >' + t.PhaseName + "</option>", D.Data.Code.push(t.PhaseCode.trim()), D.Data.Name.push(t.PhaseName.trim()) }), null != e.Records.Positions && e.Records.Positions.length > 0 && (r(e.Records.Positions, null), $("#tkc_sl_line").val(e.Records.Positions.length)), $("#loading").hide()) : GlobalCommon.ShowMessageDialog("", function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }, !1, D.Element.PopupModule, !0, !0, function () { GlobalCommon.GetErrorMessage(e); GlobalCommon.ShowMessageDialog("", function () { }, "Đã có lỗi xảy ra trong quá trình xử lý.") }) } }) } var D = { UrlAction: { CreateLaborDivisionVersion: "/LaborDivision/Create/" + $("#order").attr("option") + "/" + $("#order").val() + "/" + $("#order").attr("line") + "/" + $("#order").attr("cus") + "/" + $("#order").attr("commo"), ActiveVersion: "/LaborDivision/ActiveLaborDivisionVersion", DrawImage: "/LaborDivision/Draw/", GetListTechProcessVerDetail: "/TechnologyProcess/GetTechProcessVersionDetail", Gets: "/ProAna/Gets_TKC", GetById: "/ProAna/GetTKCById", GetTech: "/ProAna/GetTech", Save: "/ProAna/SaveTKC", ExportExcel: "/ProAna/ExportDiagramToExcel", Delete: "/ProAna/DeleteTKC" }, Element: { Jtable: "jtable_tkc", Popup: "popup_tkc", Popup_position: "tkc_popup_position", JtablePhase_Arr: "Jtable_tkc_Phase" }, Data: { LineEmployeeArr: [], TechProcessVerDetailArray: [], Position_Arr: [], EmployeeArr: [], Phase_Arr: [], PhaseList: [], TechProVerId: 0, CodeOption: "", NameOption: "", Code: [], Name: [], BasePhases: [] } }; this.GetGlobal = function () { return D }, this.Init = function () { _(), e(), p(), P("tkc_Employee") }, this.insert_Exit = function (e) { l(e) }, this.insert_BTP = function (e) { d(e) }, this.delete_Po = function (e) { c(parseInt(e)) }, this.ChooseEmployee = function (e) { h(e) }; var _ = function () {
        $("#tkc_sl_line").change(function () { "" != $("#tkc_sl_line").val() && (i(parseInt($("#tkc_sl_line").val())), $("#tkc_sl_line").prop("disabled", !0), parseInt($("#tkc_sl_line").val()) % 2 != 0 && $("#tkc_sl_line").val(parseInt($("#tkc_sl_line").val()) + 1)) }), $("[re_line_tkc]").click(function () { GetLineSelect("tkc_lineName", parseInt($("#jtable_tkc").attr("wkId"))) }), $("#jtable_tkc").change(function () { a(), GetLineSelect("tkc_lineName", parseInt($("#jtable_tkc").attr("wkId"))), t() }), $("[add_row]").click(function () { if (0 == D.Data.Position_Arr.length) o(1, 2), $("#tkc_sl_line").val(2); else { var e = D.Data.Position_Arr[D.Data.Position_Arr.length - 1].OrderIndex; o(e + 1, e + 2), $("#tkc_sl_line").val(parseInt($("#tkc_sl_line").val()) + 2) } $("#tkc_sl_line").prop("disabled", !0) }), $("#" + D.Element.Popup_position).on("shown.bs.modal", function () { $("#" + D.Element.Popup).hide(), $("div.divParent").attr("currentPoppup", D.Element.Popup_position.toUpperCase()) }), $("[cancel_tkc_po]").click(function () { $("#" + D.Element.Popup).show(), $("div.divParent").attr("currentPoppup", D.Element.Jtable.toUpperCase()) }), $("[save_tkc_po]").click(function () { D.Data.Position_Arr[D.Data.Index - 1].Details.length > 0 && D.Data.Phase_Arr.length > 1 && $.each(D.Data.Position_Arr[D.Data.Index - 1].Details, function (e, t) { $.each(D.Data.PhaseList, function (e, n) { return n.Id == t.TechProVerDe_Id ? (n.De_Percent = t.DevisionPercent > n.De_Percent ? t.DevisionPercent - n.De_Percent : n.De_Percent - t.DevisionPercent, !1) : void 0 }) }), D.Data.Position_Arr[D.Data.Index - 1].Details.length = 0, $.each(D.Data.Phase_Arr, function (e, t) { t.DevisionPercent = t.DevisionPercent_Temp, D.Data.Position_Arr[D.Data.Index - 1].Details.push(t), $.each(D.Data.PhaseList, function (e, n) { return n.Id == t.TechProVerDe_Id ? (n.De_Percent += t.DevisionPercent_Temp, n.De_Percent = n.De_Percent > 100 ? 100 : n.De_Percent, !1) : void 0 }) }), 0 != $("#tkc_Employee").val() && (D.Data.Position_Arr[D.Data.Index - 1].EmployeeId = parseInt($("#tkc_Employee").val()), D.Data.Position_Arr[D.Data.Index - 1].EmployeeName = $("#tkc_Employee option:selected").text()), $("[cancel_tkc_po]").click(), v() }), $("[cancel_tkc_po]").click(function () { D.Data.Phase_Arr.length = 0, $("#" + D.Element.PopupChoose).modal("hide"), $("#tkc_Employee").val(0), $("div.divParent").attr("currentPoppup", D.Element.Popup.toUpperCase()) }), $("#" + D.Element.Popup).on("shown.bs.modal", function () {
            $("div.divParent").attr("currentPoppup", D.Element.Popup.toUpperCase());
        }), $("[tkc_save]").click(function () { if ("" == $("#tkc_sl_line").val().trim() || 0 == parseInt($("#tkc_sl_line").val())) return GlobalCommon.ShowMessageDialog("Vui lòng nhập số lượng vị trí phân công.", function () { }, "Lỗi Nhập liệu"), !1; var e = { Id: "" == $("#tkc_id").val() ? 0 : $("#tkc_id").val(), ParentId: $("#jtable_tkc").attr("pId"), TechProVer_Id: D.Data.TechProVerId, LineId: $("#tkc_lineName").val(), TotalPosition: $("#tkc_sl_line").val(), Positions: D.Data.Position_Arr }; g(e) }), $("[tkc_cancel]").click(function () { $("#tkc_id").val(0), $("#tkc_sl_line").val(0), $("#tkc_sl_line").prop("disabled", !1), $("#tkc_des").val(0), D.Data.Position_Arr.length = 0, $("#line-box").empty(), D.Data.PhaseList.length = 0, $.each(D.Data.BasePhases, function (e, t) { var n = { Id: t.Id, TechProcessVersionId: t.TechProcessVersionId, OrderIndex: t.OrderIndex, PhaseCode: t.PhaseCode, PhaseName: t.PhaseName, StandardTMU: t.StandardTMU, Percent: t.Percent, TimeByPercent: t.TimeByPercent, Worker: t.Worker, Description: t.Description, EquipmentCode: t.EquipmentCode, TotalTMU: t.TotalTMU, SkillRequired: t.SkillRequired, PhaseGroupId: t.PhaseGroupId }; D.Data.PhaseList.push(n) }), $("div.divParent").attr("currentPoppup", "") }), $(".but_new_box").click(function () { "none" == $(".new_box").css("display") ? ($(".new_box").delay(10).fadeIn(), $(".but_new_box i").removeClass("fa-angle-double-right").addClass("fa-angle-double-left")) : ($(".new_box").hide(), $(".but_new_box i").removeClass("fa-angle-double-left").addClass("fa-angle-double-right")) }), $(".tech-info-box-but").click(function () { "none" == $(".tech-info-box-main").css("display") ? ($(".tech-info-box-main").delay(10).fadeIn(), $(".tech-info-box-but i").removeClass("fa-angle-double-right").addClass("fa-angle-double-left")) : ($(".tech-info-box-main").hide(), $(".tech-info-box-but i").removeClass("fa-angle-double-left").addClass("fa-angle-double-right")) })
    }
};